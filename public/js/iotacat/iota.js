!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@iota/crypto.js"),require("@iota/util.js"),require("big-integer")):"function"==typeof define&&define.amd?define(["exports","@iota/crypto.js","@iota/util.js","big-integer"],t):t((e="undefined"!=typeof globalThis?globalThis:e||self).Iota={},e.IotaCrypto,e.IotaUtil,e.bigInt)}(this,(function(e,t,n,i){"use strict";function o(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var r=o(i);class a{constructor(e){this._publicKey=e}toAddress(){return t.Blake2b.sum256(this._publicKey)}verify(e){return t.ArrayHelper.equal(this.toAddress(),e)}}a.ADDRESS_LENGTH=t.Blake2b.SIZE_256;const s=16,u=t.Blake2b.SIZE_256,d=t.Blake2b.SIZE_256,l=t.Blake2b.SIZE_256,c=32;function p(e){if(!e.hasRemaining(33))throw new Error(`Alias address data is ${e.length()} in length which is less than the minimimum size required of 33`);const t=e.readUInt8("aliasAddress.type");if(8!==t)throw new Error(`Type mismatch in aliasAddress ${t}`);return{type:8,aliasId:e.readFixedHex("aliasAddress.aliasId",c)}}function h(e,t){e.writeUInt8("aliasAddress.type",t.type),e.writeFixedHex("aliasAddress.aliasId",c,t.aliasId)}const f=1+a.ADDRESS_LENGTH;function m(e){if(!e.hasRemaining(f))throw new Error(`Ed25519 address data is ${e.length()} in length which is less than the minimimum size required of ${f}`);const t=e.readUInt8("ed25519Address.type");if(0!==t)throw new Error(`Type mismatch in ed25519Address ${t}`);return{type:0,pubKeyHash:e.readFixedHex("ed25519Address.pubKeyHash",a.ADDRESS_LENGTH)}}function y(e,t){e.writeUInt8("ed25519Address.type",t.type),e.writeFixedHex("ed25519Address.pubKeyHash",a.ADDRESS_LENGTH,t.pubKeyHash)}const g=32;function T(e){if(!e.hasRemaining(33))throw new Error(`NFT address data is ${e.length()} in length which is less than the minimimum size required of 33`);const t=e.readUInt8("nftAddress.type");if(t!==s)throw new Error(`Type mismatch in nftAddress ${t}`);const n=e.readFixedHex("nftAddress.nftId",g);return{type:s,nftId:n}}function I(e,t){e.writeUInt8("nftAddress.type",t.type),e.writeFixedHex("nftAddress.nftId",g,t.nftId)}const w=Math.min(f,33,33);function k(e){if(!e.hasRemaining(w))throw new Error(`Address data is ${e.length()} in length which is less than the minimimum size required of ${w}`);const t=e.readUInt8("address.type",!1);let n;if(0===t)n=m(e);else if(8===t)n=p(e);else{if(t!==s)throw new Error(`Unrecognized address type ${t}`);n=T(e)}return n}function U(e,t){if(0===t.type)y(e,t);else if(8===t.type)h(e,t);else{if(t.type!==s)throw new Error(`Unrecognized address type ${t.type}`);I(e,t)}}const E=1+w;function $(e){if(!e.hasRemaining(E))throw new Error(`Issuer Feature data is ${e.length()} in length which is less than the minimimum size required of ${E}`);const t=e.readUInt8("issuerFeature.type");if(1!==t)throw new Error(`Type mismatch in issuerFeature ${t}`);return{type:1,address:k(e)}}function v(e,t){e.writeUInt8("issuerFeature.type",t.type),U(e,t.address)}function _(e){if(!e.hasRemaining(3))throw new Error(`Metadata Feature data is ${e.length()} in length which is less than the minimimum size required of 3`);const t=e.readUInt8("metadataFeature.type");if(2!==t)throw new Error(`Type mismatch in metadataFeature ${t}`);const n=e.readUInt16("metadataFeature.dataLength");return{type:2,data:e.readFixedHex("metadataFeature.data",n)}}function N(e,t){e.writeUInt8("metadataFeature.type",t.type);const i=n.HexHelper.stripPrefix(t.data);e.writeUInt16("metadataFeature.dataLength",i.length/2),e.writeFixedHex("metadataFeature.data",i.length/2,i)}const x=1+w;function A(e){if(!e.hasRemaining(x))throw new Error(`Sender Feature data is ${e.length()} in length which is less than the minimimum size required of ${x}`);const t=e.readUInt8("senderFeature.type");if(0!==t)throw new Error(`Type mismatch in senderFeature ${t}`);return{type:0,address:k(e)}}function S(e,t){e.writeUInt8("senderFeature.type",t.type),U(e,t.address)}function C(e){if(!e.hasRemaining(2))throw new Error(`Tag Feature data is ${e.length()} in length which is less than the minimimum size required of 2`);const t=e.readUInt8("tagFeature.type");if(3!==t)throw new Error(`Type mismatch in tagFeature ${t}`);const n=e.readUInt8("tagFeature.tagLength");return{type:3,tag:e.readFixedHex("tagFeature.tag",n)}}function O(e,t){e.writeUInt8("tagFeature.type",t.type);const i=n.HexHelper.stripPrefix(t.tag);e.writeUInt8("tagFeature.tagLength",i.length/2),e.writeFixedHex("tagFeature.tag",i.length/2,i)}const b=Math.min(x,E,3,2);function M(e){const t=e.readUInt8("features.numFeatures"),n=[];for(let i=0;i<t;i++)n.push(H(e));return t>0?n:void 0}function P(e,t){var n;if(e.writeUInt8("features.numFeatures",null!==(n=null==t?void 0:t.length)&&void 0!==n?n:0),t)for(let n=0;n<t.length;n++)R(e,t[n])}function H(e){if(!e.hasRemaining(b))throw new Error(`Feature data is ${e.length()} in length which is less than the minimimum size required of ${b}`);const t=e.readUInt8("feature.type",!1);let n;if(0===t)n=A(e);else if(1===t)n=$(e);else if(2===t)n=_(e);else{if(3!==t)throw new Error(`Unrecognized feature type ${t}`);n=C(e)}return n}function R(e,t){if(0===t.type)S(e,t);else if(1===t.type)v(e,t);else if(2===t.type)N(e,t);else{if(3!==t.type)throw new Error(`Unrecognized feature type ${t.type}`);O(e,t)}}const F=49+w+8;function z(e){const t=e.readUInt16("funds.numFunds"),n=[];for(let i=0;i<t;i++)n.push(L(e));return n}function B(e,t){if(t.length>127)throw new Error(`The maximum number of funds is 127, you have provided ${t.length}`);e.writeUInt16("funds.numFunds",t.length);for(let n=0;n<t.length;n++)D(e,t[n])}function L(e){if(!e.hasRemaining(F))throw new Error(`Migrated funds data is ${e.length()} in length which is less than the minimimum size required of ${F}`);return{tailTransactionHash:e.readFixedHex("migratedFunds.tailTransactionHash",49),address:k(e),deposit:e.readUInt64("migratedFunds.deposit").toString()}}function D(e,t){e.writeFixedHex("migratedFunds.tailTransactionHash",49,t.tailTransactionHash),U(e,t.address),e.writeUInt64("migratedFunds.deposit",r.default(t.deposit))}const G=1+d;function K(e){if(!e.hasRemaining(G))throw new Error(`Treasury Input data is ${e.length()} in length which is less than the minimimum size required of ${G}`);const t=e.readUInt8("treasuryInput.type");if(1!==t)throw new Error(`Type mismatch in treasuryInput ${t}`);return{type:1,milestoneId:e.readFixedHex("treasuryInput.milestoneId",d)}}function q(e,t){e.writeUInt8("treasuryInput.type",t.type),e.writeFixedHex("treasuryInput.milestoneId",d,t.milestoneId)}const Y=1+d+2;function V(e){if(!e.hasRemaining(Y))throw new Error(`UTXO Input data is ${e.length()} in length which is less than the minimimum size required of ${Y}`);const t=e.readUInt8("utxoInput.type");if(0!==t)throw new Error(`Type mismatch in utxoInput ${t}`);return{type:0,transactionId:e.readFixedHex("utxoInput.transactionId",d),transactionOutputIndex:e.readUInt16("utxoInput.transactionOutputIndex")}}function X(e,t){e.writeUInt8("utxoInput.type",t.type),e.writeFixedHex("utxoInput.transactionId",d,t.transactionId),e.writeUInt16("utxoInput.transactionOutputIndex",t.transactionOutputIndex)}const W=Math.min(Y,G),J=128;function Z(e){const t=e.readUInt16("inputs.numInputs"),n=[];for(let i=0;i<t;i++)n.push(Q(e));return n}function j(e,t){if(t.length<1)throw new Error(`The minimum number of inputs is 1, you have provided ${t.length}`);if(t.length>J)throw new Error(`The maximum number of inputs is 128, you have provided ${t.length}`);e.writeUInt16("inputs.numInputs",t.length);for(let n=0;n<t.length;n++)ee(e,t[n])}function Q(e){if(!e.hasRemaining(W))throw new Error(`Input data is ${e.length()} in length which is less than the minimimum size required of ${W}`);const t=e.readUInt8("input.type",!1);let n;if(0===t)n=V(e);else{if(1!==t)throw new Error(`Unrecognized input type ${t}`);n=K(e)}return n}function ee(e,t){if(0===t.type)X(e,t);else{if(1!==t.type)throw new Error(`Unrecognized input type ${t.type}`);q(e,t)}}function te(e){if(!e.hasRemaining(8))throw new Error(`Protocol params Milestone Option data is ${e.length()} in length which is less than the minimimum size required of 8`);const t=e.readUInt8("protocolParamsMilestoneOption.type");if(1!==t)throw new Error(`Type mismatch in protocolParamsMilestoneOption ${t}`);const n=e.readUInt32("protocolParamsMilestoneOption.targetMilestoneIndex"),i=e.readUInt8("protocolParamsMilestoneOption.protocolVersion"),o=e.readUInt16("payloadMilestone.paramsLength");return{type:1,targetMilestoneIndex:n,protocolVersion:i,params:e.readFixedHex("payloadMilestone.metadata",o)}}function ne(e,t){e.writeUInt8("protocolParamsMilestoneOption.type",t.type),e.writeUInt32("protocolParamsMilestoneOption.targetMilestoneIndex",t.targetMilestoneIndex),e.writeUInt8("protocolParamsMilestoneOption.protocolVersion",t.protocolVersion);const i=n.HexHelper.stripPrefix(t.params);e.writeUInt16("protocolParamsMilestoneOption.paramsLength",i.length/2),e.writeFixedHex("protocolParamsMilestoneOption.params",i.length/2,i)}const ie=7+F;function oe(e){if(!e.hasRemaining(ie))throw new Error(`Receipt Milestone Option data is ${e.length()} in length which is less than the minimimum size required of ${ie}`);const t=e.readUInt8("receiptMilestoneOption.type");if(0!==t)throw new Error(`Type mismatch in receiptMilestoneOption ${t}`);const n=e.readUInt32("receiptMilestoneOption.migratedAt"),i=e.readBoolean("receiptMilestoneOption.final"),o=z(e),r=Vt(e);if(4!==(null==r?void 0:r.type))throw new Error(`receiptMilestoneOption can only contain treasury payloads ${t}`);return{type:0,migratedAt:n,final:i,funds:o,transaction:r}}function re(e,t){e.writeUInt8("receiptMilestoneOption.type",t.type),e.writeUInt32("receiptMilestoneOption.migratedAt",t.migratedAt),e.writeBoolean("receiptMilestoneOption.final",t.final),B(e,t.funds),Xt(e,t.transaction)}const ae=Math.min(ie,8);function se(e){const t=e.readUInt8("milestoneOptions.optionsCount"),n=[];for(let i=0;i<t;i++)n.push(de(e));return n}function ue(e,t){e.writeUInt8("milestoneOptions.optionsCount",t.length);for(let n=0;n<t.length;n++)le(e,t[n])}function de(e){if(!e.hasRemaining(ae))throw new Error(`Milestone option data is ${e.length()} in length which is less than the minimimum size required of ${ae}`);const t=e.readUInt8("milestoneOption.type",!1);let n;if(0===t)n=oe(e);else{if(1!==t)throw new Error(`Unrecognized milestone option type ${t}`);n=te(e)}return n}function le(e,t){if(0===t.type)re(e,t);else{if(1!==t.type)throw new Error(`Unrecognized milestone option type ${t.type}`);ne(e,t)}}const ce=1+t.Ed25519.SIGNATURE_SIZE+t.Ed25519.PUBLIC_KEY_SIZE;function pe(e){if(!e.hasRemaining(ce))throw new Error(`Ed25519 signature data is ${e.length()} in length which is less than the minimimum size required of ${ce}`);const n=e.readUInt8("ed25519Signature.type");if(0!==n)throw new Error(`Type mismatch in ed25519Signature ${n}`);return{type:0,publicKey:e.readFixedHex("ed25519Signature.publicKey",t.Ed25519.PUBLIC_KEY_SIZE),signature:e.readFixedHex("ed25519Signature.signature",t.Ed25519.SIGNATURE_SIZE)}}function he(e,n){e.writeUInt8("ed25519Signature.type",n.type),e.writeFixedHex("ed25519Signature.publicKey",t.Ed25519.PUBLIC_KEY_SIZE,n.publicKey),e.writeFixedHex("ed25519Signature.signature",t.Ed25519.SIGNATURE_SIZE,n.signature)}const fe=ce;function me(e){if(!e.hasRemaining(fe))throw new Error(`Signature data is ${e.length()} in length which is less than the minimimum size required of ${fe}`);const t=e.readUInt8("signature.type",!1);let n;if(0!==t)throw new Error(`Unrecognized signature type ${t}`);return n=pe(e),n}function ye(e,t){if(0!==t.type)throw new Error(`Unrecognized signature type ${t.type}`);he(e,t)}const ge=12+u+u+u+2*l+1+2+1+ce;function Te(e){if(!e.hasRemaining(ge))throw new Error(`Milestone Payload data is ${e.length()} in length which is less than the minimimum size required of ${ge}`);const t=e.readUInt32("payloadMilestone.type");if(7!==t)throw new Error(`Type mismatch in payloadMilestone ${t}`);const n=e.readUInt32("payloadMilestone.index"),i=e.readUInt32("payloadMilestone.timestamp"),o=e.readUInt8("payloadMileston.protocolVersion"),r=e.readFixedHex("payloadMilestone.previousMilestoneId",u),a=e.readUInt8("payloadMilestone.numParents"),s=[];for(let t=0;t<a;t++){const n=e.readFixedHex(`payloadMilestone.parentBlockId${t+1}`,u);s.push(n)}const d=e.readFixedHex("payloadMilestone.inclusionMerkleRoot",l),c=e.readFixedHex("payloadMilestone.appliedMerkleRoot",l),p=e.readUInt16("payloadMilestone.metadataLength"),h=e.readFixedHex("payloadMilestone.metadata",p),f=se(e),m=e.readUInt8("payloadMilestone.signaturesCount"),y=[];for(let t=0;t<m;t++)y.push(me(e));return{type:7,index:n,timestamp:Number(i),protocolVersion:o,previousMilestoneId:r,parents:s,inclusionMerkleRoot:d,appliedMerkleRoot:c,metadata:h,options:f,signatures:y}}function Ie(e,t){e.writeUInt32("payloadMilestone.type",t.type),we(e,t),e.writeUInt8("payloadMilestone.signaturesCount",t.signatures.length);for(let n=0;n<t.signatures.length;n++)ye(e,t.signatures[n])}function we(e,t){if(e.writeUInt32("payloadMilestone.index",t.index),e.writeUInt32("payloadMilestone.timestamp",t.timestamp),e.writeUInt8("payloadMilesone.protocolVersion",t.protocolVersion),e.writeFixedHex("payloadMilestone.previousMilestoneId",u,t.previousMilestoneId),t.parents.length<jt)throw new Error(`A minimum of ${jt} parents is allowed, you provided ${t.parents.length}`);if(t.parents.length>Zt)throw new Error(`A maximum of ${Zt} parents is allowed, you provided ${t.parents.length}`);if(new Set(t.parents).size!==t.parents.length)throw new Error("The milestone parents must be unique");const i=t.parents.slice().sort();e.writeUInt8("payloadMilestone.numParents",t.parents.length);for(let n=0;n<t.parents.length;n++){if(i[n]!==t.parents[n])throw new Error("The milestone parents must be lexographically sorted");e.writeFixedHex(`payloadMilestone.parentBlockId${n+1}`,u,t.parents[n])}if(e.writeFixedHex("payloadMilestone.inclusionMerkleRoot",l,t.inclusionMerkleRoot),e.writeFixedHex("payloadMilestone.appliedMerkleRoot",l,t.appliedMerkleRoot),t.metadata){const i=n.HexHelper.stripPrefix(t.metadata);e.writeUInt16("payloadMilestone.metadataLength",i.length/2),i.length>0&&e.writeFixedHex("payloadMilestone.metadata",i.length/2,i)}else e.writeUInt16("payloadMilestone.metadataLength",0);t.options?ue(e,t.options):e.writeUInt8("milestoneOptions.optionsCount",0)}const ke=64;function Ue(e){if(!e.hasRemaining(9))throw new Error(`Tagged Data Payload data is ${e.length()} in length which is less than the minimimum size required of 9`);const t=e.readUInt32("payloadTaggedData.type");if(5!==t)throw new Error(`Type mismatch in payloadTaggedData ${t}`);const i=e.readUInt8("payloadTaggedData.tagLength");let o="";i>0&&(o=e.readFixedHex("payloadTaggedData.tag",i));const r=e.readUInt32("payloadTaggedData.dataLength");let a="";return r>0&&(a=e.readFixedHex("payloadTaggedData.data",r)),{type:5,tag:o?n.HexHelper.addPrefix(o):o,data:a?n.HexHelper.addPrefix(a):a}}function Ee(e,t){if(t.tag&&t.tag.length/2>ke)throw new Error(`The tag length is ${t.tag.length/2}, which exceeds the maximum size of 64`);if(e.writeUInt32("payloadTaggedData.type",t.type),t.tag){const i=n.HexHelper.stripPrefix(t.tag);e.writeUInt8("payloadTaggedData.tagLength",i.length/2),i.length>0&&e.writeFixedHex("payloadTaggedData.tag",i.length/2,i)}else e.writeUInt32("payloadTaggedData.tagLength",0);if(t.data){const i=n.HexHelper.stripPrefix(t.data);e.writeUInt32("payloadTaggedData.dataLength",i.length/2),i.length>0&&e.writeFixedHex("payloadTaggedData.data",i.length/2,i)}else e.writeUInt32("payloadTaggedData.dataLength",0)}const $e=t.Blake2b.SIZE_256,ve=64;function _e(e){const t=e.readUInt8("nativeTokens.numNativeTokens"),n=[];for(let i=0;i<t;i++)n.push(xe(e));return t>0?n:void 0}function Ne(e,t){var n;if(e.writeUInt8("nativeTokens.numNativeTokens",null!==(n=null==t?void 0:t.length)&&void 0!==n?n:0),t)for(let n=0;n<t.length;n++)Ae(e,t[n])}function xe(e){const t=e.readFixedHex("nativeToken.id",38),i=e.readUInt256("nativeToken.amount");return{id:t,amount:n.HexHelper.fromBigInt256(i)}}function Ae(e,t){e.writeFixedHex("nativeToken.id",38,t.id),e.writeUInt256("nativeToken.amount",n.HexHelper.toBigInt256(t.amount))}const Se=1+w;function Ce(e){if(!e.hasRemaining(Se))throw new Error(`Address unlock condition data is ${e.length()} in length which is less than the minimimum size required of ${Se}`);const t=e.readUInt8("addressUnlockCondition.type");if(0!==t)throw new Error(`Type mismatch in addressUnlockCondition ${t}`);return{type:0,address:k(e)}}function Oe(e,t){e.writeUInt8("addressUnlockCondition.type",t.type),U(e,t.address)}const be=1+w+4;function Me(e){if(!e.hasRemaining(be))throw new Error(`Expiration unlock condition data is ${e.length()} in length which is less than the minimimum size required of ${be}`);const t=e.readUInt8("expirationUnlockCondition.type");if(3!==t)throw new Error(`Type mismatch in expirationUnlockCondition ${t}`);return{type:3,returnAddress:k(e),unixTime:e.readUInt32("expirationUnlockCondition.unixTime")}}function Pe(e,t){e.writeUInt8("expirationUnlockCondition.type",t.type),U(e,t.returnAddress),e.writeUInt32("expirationUnlockCondition.unixTime",t.unixTime)}const He=1+w;function Re(e){if(!e.hasRemaining(He))throw new Error(`Immutable Alias unlock condition data is ${e.length()} in length which is less than the minimimum size required of ${He}`);const t=e.readUInt8("immutableAliasUnlockCondition.type");if(6!==t)throw new Error(`Type mismatch in immutableAliasUnlockCondition ${t}`);return{type:6,address:k(e)}}function Fe(e,t){e.writeUInt8("immutableAliasUnlockCondition.type",t.type),U(e,t.address)}function ze(e){if(!e.hasRemaining(5))throw new Error(`Timelock unlock condition data is ${e.length()} in length which is less than the minimimum size required of 5`);const t=e.readUInt8("timelockUnlockCondition.type");if(2!==t)throw new Error(`Type mismatch in timelockUnlockCondition ${t}`);return{type:2,unixTime:e.readUInt32("timelockUnlockCondition.unixTime")}}function Be(e,t){e.writeUInt8("timelockUnlockCondition.type",t.type),e.writeUInt32("timelockUnlockCondition.unixTime",t.unixTime)}const Le=1+w;function De(e){if(!e.hasRemaining(Le))throw new Error(`Governor unlock condition data is ${e.length()} in length which is less than the minimimum size required of ${Le}`);const t=e.readUInt8("governorUnlockCondition.type");if(5!==t)throw new Error(`Type mismatch in governorUnlockCondition ${t}`);return{type:5,address:k(e)}}function Ge(e,t){e.writeUInt8("governorUnlockCondition.type",t.type),U(e,t.address)}const Ke=1+w;function qe(e){if(!e.hasRemaining(Ke))throw new Error(`State controller addres unlock condition data is ${e.length()} in length which is less than the minimimum size required of ${Ke}`);const t=e.readUInt8("stateControllerAddresUnlockCondition.type");if(4!==t)throw new Error(`Type mismatch in stateControllerAddresUnlockCondition ${t}`);return{type:4,address:k(e)}}function Ye(e,t){e.writeUInt8("stateControllerAddressUnlockCondition.type",t.type),U(e,t.address)}const Ve=1+w+8;function Xe(e){if(!e.hasRemaining(Ve))throw new Error(`Storage deposit return unlock condition data is ${e.length()} in length which is less than the minimimum size required of ${Ve}`);const t=e.readUInt8("storageDepositReturnUnlockCondition.type");if(1!==t)throw new Error(`Type mismatch in storagDepositReturnUnlockCondition ${t}`);return{type:1,returnAddress:k(e),amount:e.readUInt64("storageDepositReturnUnlockCondition.amount").toString()}}function We(e,t){e.writeUInt8("storageDepositReturnUnlockCondition.type",t.type),U(e,t.returnAddress),e.writeUInt64("storageDepositReturnUnlockCondition.amount",r.default(t.amount))}const Je=Math.min(Se,Ve,5,be,Ke,Le,He);function Ze(e){const t=e.readUInt8("unlockConditions.numUnlockConditions"),n=[];for(let i=0;i<t;i++)n.push(Qe(e));return n}function je(e,t){e.writeUInt8("unlockConditions.numUnlockConditions",t.length);for(let n=0;n<t.length;n++)et(e,t[n])}function Qe(e){if(!e.hasRemaining(Je))throw new Error(`Unlock condition data is ${e.length()} in length which is less than the minimimum size required of ${Je}`);const t=e.readUInt8("unlockCondition.type",!1);let n;if(0===t)n=Ce(e);else if(1===t)n=Xe(e);else if(2===t)n=ze(e);else if(3===t)n=Me(e);else if(4===t)n=qe(e);else if(5===t)n=De(e);else{if(6!==t)throw new Error(`Unrecognized unlock condition type ${t}`);n=Re(e)}return n}function et(e,t){if(0===t.type)Oe(e,t);else if(1===t.type)We(e,t);else if(2===t.type)Be(e,t);else if(3===t.type)Pe(e,t);else if(4===t.type)Ye(e,t);else if(5===t.type)Ge(e,t);else{if(6!==t.type)throw new Error(`Unrecognized unlock condition type ${t.type}`);Fe(e,t)}}function tt(e){if(!e.hasRemaining(55))throw new Error(`Alias Output data is ${e.length()} in length which is less than the minimimum size required of 55`);const t=e.readUInt8("aliasOutput.type");if(4!==t)throw new Error(`Type mismatch in aliasOutput ${t}`);const n=e.readUInt64("aliasOutput.amount"),i=_e(e),o=e.readFixedHex("aliasOutput.aliasId",c),r=e.readUInt32("aliasOutput.stateIndex"),a=e.readUInt16("aliasOutput.stateMetadataLength"),s=a>0?e.readFixedHex("aliasOutput.stateMetadata",a):void 0,u=e.readUInt32("aliasOutput.foundryCounter"),d=Ze(e),l=M(e),p=M(e);return{type:4,amount:n.toString(),nativeTokens:i,aliasId:o,stateIndex:r,stateMetadata:s,foundryCounter:u,unlockConditions:d,features:l,immutableFeatures:p}}function nt(e,t){var i,o,a;if(e.writeUInt8("aliasOutput.type",t.type),e.writeUInt64("aliasOutput.amount",r.default(t.amount)),Ne(e,null!==(i=t.nativeTokens)&&void 0!==i?i:[]),e.writeFixedHex("aliasOutput.aliasId",c,t.aliasId),e.writeUInt32("aliasOutput.stateIndex",t.stateIndex),t.stateMetadata){const i=n.HexHelper.stripPrefix(t.stateMetadata);e.writeUInt16("aliasOutput.stateMetadataLength",i.length/2),i.length>0&&e.writeFixedHex("aliasOutput.stateMetadata",i.length/2,i)}else e.writeUInt16("aliasOutput.stateMetadataLength",0);e.writeUInt32("aliasOutput.foundryCounter",t.foundryCounter),je(e,t.unlockConditions),P(e,null!==(o=t.features)&&void 0!==o?o:[]),P(e,null!==(a=t.immutableFeatures)&&void 0!==a?a:[])}const it=11+b;function ot(e){if(!e.hasRemaining(it))throw new Error(`Basic Output data is ${e.length()} in length which is less than the minimimum size required of ${it}`);const t=e.readUInt8("basicOutput.type");if(3!==t)throw new Error(`Type mismatch in basicOutput ${t}`);const n=e.readUInt64("basicOutput.amount"),i=_e(e),o=Ze(e),r=M(e);return{type:3,amount:n.toString(),nativeTokens:i,unlockConditions:o,features:r}}function rt(e,t){e.writeUInt8("basicOutput.type",t.type),e.writeUInt64("basicOutput.amount",r.default(t.amount)),Ne(e,t.nativeTokens),je(e,t.unlockConditions),P(e,t.features)}function at(e){if(!e.hasRemaining(97))throw new Error(`Simple Token Scheme data is ${e.length()} in length which is less than the minimimum size required of 97`);const t=e.readUInt8("simpleTokenScheme.type");if(0!==t)throw new Error(`Type mismatch in simpleTokenScheme ${t}`);const i=e.readUInt256("foundryOutput.mintedTokens"),o=e.readUInt256("foundryOutput.meltedTokens"),r=e.readUInt256("foundryOutput.maximumSupply");return{mintedTokens:n.HexHelper.fromBigInt256(i),meltedTokens:n.HexHelper.fromBigInt256(o),maximumSupply:n.HexHelper.fromBigInt256(r),type:0}}function st(e,t){e.writeUInt8("simpleTokenScheme.type",t.type),e.writeUInt256("foundryOutput.mintedTokens",n.HexHelper.toBigInt256(t.mintedTokens)),e.writeUInt256("foundryOutput.meltedTokens",n.HexHelper.toBigInt256(t.meltedTokens)),e.writeUInt256("foundryOutput.maximumSupply",n.HexHelper.toBigInt256(t.maximumSupply))}function ut(e){if(!e.hasRemaining(97))throw new Error(`Token Scheme data is ${e.length()} in length which is less than the minimimum size required of 97`);const t=e.readUInt8("tokenScheme.type",!1);let n;if(0!==t)throw new Error(`Unrecognized token scheme type ${t}`);return n=at(e),n}function dt(e,t){if(0!==t.type)throw new Error(`Unrecognized simple token scheme type ${t.type}`);st(e,t)}const lt=114;function ct(e){if(!e.hasRemaining(lt))throw new Error(`Foundry Output data is ${e.length()} in length which is less than the minimimum size required of 114`);const t=e.readUInt8("foundryOutput.type");if(5!==t)throw new Error(`Type mismatch in foundryOutput ${t}`);const n=e.readUInt64("foundryOutput.amount"),i=_e(e),o=e.readUInt32("foundryOutput.serialNumber"),r=ut(e),a=Ze(e),s=M(e),u=M(e);return{type:5,amount:n.toString(),nativeTokens:i,serialNumber:o,tokenScheme:r,unlockConditions:a,features:s,immutableFeatures:u}}function pt(e,t){e.writeUInt8("foundryOutput.type",t.type),e.writeUInt64("foundryOutput.amount",r.default(t.amount)),Ne(e,t.nativeTokens),e.writeUInt32("foundryOutput.serialNumber",t.serialNumber),dt(e,t.tokenScheme),je(e,t.unlockConditions),P(e,t.features),P(e,t.immutableFeatures)}const ht=43+b+b;function ft(e){if(!e.hasRemaining(ht))throw new Error(`NFT Output data is ${e.length()} in length which is less than the minimimum size required of ${ht}`);const t=e.readUInt8("nftOutput.type");if(6!==t)throw new Error(`Type mismatch in nftOutput ${t}`);const n=e.readUInt64("nftOutput.amount"),i=_e(e),o=e.readFixedHex("nftOutput.nftId",g),r=Ze(e),a=M(e),s=M(e);return{type:6,amount:n.toString(),nativeTokens:i,nftId:o,unlockConditions:r,features:a,immutableFeatures:s}}function mt(e,t){e.writeUInt8("nftOutput.type",t.type),e.writeUInt64("nftOutput.amount",r.default(t.amount)),Ne(e,t.nativeTokens),e.writeFixedHex("nftOutput.nftId",g,t.nftId),je(e,t.unlockConditions),P(e,t.features),P(e,t.immutableFeatures)}function yt(e){if(!e.hasRemaining(9))throw new Error(`Treasury Output data is ${e.length()} in length which is less than the minimimum size required of 9`);const t=e.readUInt8("treasuryOutput.type");if(2!==t)throw new Error(`Type mismatch in treasuryOutput ${t}`);return{type:2,amount:e.readUInt64("treasuryOutput.amount").toString()}}function gt(e,t){e.writeUInt8("treasuryOutput.type",t.type),e.writeUInt64("treasuryOutput.amount",r.default(t.amount))}const Tt=Math.min(9,lt,it,ht,55),It=128;function wt(e){const t=e.readUInt16("outputs.numOutputs"),n=[];for(let i=0;i<t;i++)n.push(Ut(e));return n}function kt(e,t){var n,i;if(t.length<1)throw new Error(`The minimum number of outputs is 1, you have provided ${t.length}`);if(t.length>It)throw new Error(`The maximum number of outputs is 128, you have provided ${t.length}`);e.writeUInt16("outputs.numOutputs",t.length);let o=0;for(let r=0;r<t.length;r++)if(Et(e,t[r]),3===t[r].type||4===t[r].type||5===t[r].type||6===t[r].type){o+=null!==(i=null===(n=t[r].nativeTokens)||void 0===n?void 0:n.length)&&void 0!==i?i:0}if(o>ve)throw new Error(`The maximum number of native tokens is 64, you have provided ${o}`)}function Ut(e){if(!e.hasRemaining(Tt))throw new Error(`Output data is ${e.length()} in length which is less than the minimimum size required of ${Tt}`);const t=e.readUInt8("output.type",!1);let n;if(2===t)n=yt(e);else if(3===t)n=ot(e);else if(5===t)n=ct(e);else if(6===t)n=ft(e);else{if(4!==t)throw new Error(`Unrecognized output type ${t}`);n=tt(e)}return n}function Et(e,t){if(2===t.type)gt(e,t);else if(3===t.type)rt(e,t);else if(5===t.type)pt(e,t);else if(6===t.type)mt(e,t);else{if(4!==t.type)throw new Error(`Unrecognized output type ${t.type}`);nt(e,t)}}const $t=11+$e+2+4;function vt(e){if(!e.hasRemaining($t))throw new Error(`Transaction essence data is ${e.length()} in length which is less than the minimimum size required of ${$t}`);const t=e.readUInt8("transactionEssence.type");if(1!==t)throw new Error(`Type mismatch in transactionEssence ${t}`);const n=e.readUInt64("transactionEssence.networkId"),i=Z(e),o=e.readFixedHex("transactionEssence.inputsCommitment",$e),r=wt(e),a=Vt(e);if(a&&5!==a.type)throw new Error("Transaction essence can only contain embedded Tagged Data Payload");for(const e of i)if(0!==e.type)throw new Error("Transaction essence can only contain UTXO Inputs");return{type:1,networkId:n.toString(),inputs:i,inputsCommitment:o,outputs:r,payload:a}}function _t(e,t){var n;e.writeUInt8("transactionEssence.type",t.type),e.writeUInt64("transactionEssence.networkId",r.default(null!==(n=t.networkId)&&void 0!==n?n:"0"));for(const e of t.inputs)if(0!==e.type)throw new Error("Transaction essence can only contain UTXO Inputs");j(e,t.inputs),e.writeFixedHex("transactionEssence.inputsCommitment",$e,t.inputsCommitment),kt(e,t.outputs),Xt(e,t.payload)}function Nt(e){if(!e.hasRemaining(3))throw new Error(`Alias Unlock data is ${e.length()} in length which is less than the minimimum size required of 3`);const t=e.readUInt8("aliasUnlock.type");if(2!==t)throw new Error(`Type mismatch in aliasUnlock ${t}`);return{type:2,reference:e.readUInt16("aliasUnlock.reference")}}function xt(e,t){e.writeUInt8("aliasUnlock.type",t.type),e.writeUInt16("aliasUnlock.reference",t.reference)}function At(e){if(!e.hasRemaining(3))throw new Error(`Nft Unlock data is ${e.length()} in length which is less than the minimimum size required of 3`);const t=e.readUInt8("nftUnlock.type");if(3!==t)throw new Error(`Type mismatch in nftUnlock ${t}`);return{type:3,reference:e.readUInt16("nftUnlock.reference")}}function St(e,t){e.writeUInt8("nftUnlock.type",t.type),e.writeUInt16("nftUnlock.reference",t.reference)}function Ct(e){if(!e.hasRemaining(3))throw new Error(`Reference Unlock data is ${e.length()} in length which is less than the minimimum size required of 3`);const t=e.readUInt8("referenceUnlock.type");if(1!==t)throw new Error(`Type mismatch in referenceUnlock ${t}`);return{type:1,reference:e.readUInt16("referenceUnlock.reference")}}function Ot(e,t){e.writeUInt8("referenceUnlock.type",t.type),e.writeUInt16("referenceUnlock.reference",t.reference)}const bt=1+fe;function Mt(e){if(!e.hasRemaining(bt))throw new Error(`Signature Unlock data is ${e.length()} in length which is less than the minimimum size required of ${bt}`);const t=e.readUInt8("signatureUnlock.type");if(0!==t)throw new Error(`Type mismatch in signatureUnlock ${t}`);return{type:0,signature:me(e)}}function Pt(e,t){e.writeUInt8("signatureUnlock.type",t.type),ye(e,t.signature)}const Ht=Math.min(bt,3,3,3);function Rt(e){const t=e.readUInt16("transactionEssence.numUnlocks"),n=[];for(let i=0;i<t;i++)n.push(zt(e));return n}function Ft(e,t){e.writeUInt16("transactionEssence.numUnlocks",t.length);for(let n=0;n<t.length;n++)Bt(e,t[n])}function zt(e){if(!e.hasRemaining(Ht))throw new Error(`Unlock data is ${e.length()} in length which is less than the minimimum size required of ${Ht}`);const t=e.readUInt8("unlock.type",!1);let n;if(0===t)n=Mt(e);else if(1===t)n=Ct(e);else if(2===t)n=Nt(e);else{if(3!==t)throw new Error(`Unrecognized unlock type ${t}`);n=At(e)}return n}function Bt(e,t){if(0===t.type)Pt(e,t);else if(1===t.type)Ot(e,t);else if(2===t.type)xt(e,t);else{if(3!==t.type)throw new Error(`Unrecognized unlock type ${t.type}`);St(e,t)}}function Lt(e){if(!e.hasRemaining(8))throw new Error(`Transaction Payload data is ${e.length()} in length which is less than the minimimum size required of 8`);const t=e.readUInt32("payloadTransaction.type");if(6!==t)throw new Error(`Type mismatch in payloadTransaction ${t}`);let n,i;if(1!==e.readUInt8("payloadTransaction.essenceType",!1))throw new Error(`Unrecognized transaction essence type ${t}`);return n=vt(e),i=Rt(e),{type:6,essence:n,unlocks:i}}function Dt(e,t){if(e.writeUInt32("payloadTransaction.type",t.type),6!==t.type)throw new Error(`Unrecognized transaction type ${t.type}`);_t(e,t.essence),Ft(e,t.unlocks)}const Gt=4+G+9;function Kt(e){if(!e.hasRemaining(Gt))throw new Error(`Treasury Transaction Payload data is ${e.length()} in length which is less than the minimimum size required of ${Gt}`);const t=e.readUInt32("payloadTreasuryTransaction.type");if(4!==t)throw new Error(`Type mismatch in payloadTreasuryTransaction ${t}`);return{type:4,input:K(e),output:yt(e)}}function qt(e,t){e.writeUInt32("payloadTreasuryTransaction.type",t.type),q(e,t.input),gt(e,t.output)}const Yt=Math.min(8,ge,9,Gt);function Vt(e){const t=e.readUInt32("payload.length");if(!e.hasRemaining(t))throw new Error(`Payload length ${t} exceeds the remaining data ${e.unused()}`);let n;if(t>0){const t=e.readUInt32("payload.type",!1);if(6===t)n=Lt(e);else if(7===t)n=Te(e);else if(4===t)n=Kt(e);else{if(5!==t)throw new Error(`Unrecognized payload type ${t}`);n=Ue(e)}}return n}function Xt(e,t){const n=e.getWriteIndex();if(e.writeUInt32("payload.length",0),t)if(6===t.type)Dt(e,t);else if(7===t.type)Ie(e,t);else if(4===t.type)qt(e,t);else{if(5!==t.type)throw new Error(`Unrecognized transaction type ${t.type}`);Ee(e,t)}else;const i=e.getWriteIndex();e.setWriteIndex(n),e.writeUInt32("payload.length",i-n-4),e.setWriteIndex(i)}const Wt=2+u+Yt+8,Jt=32768,Zt=8,jt=1;function Qt(e){if(!e.hasRemaining(Wt))throw new Error(`Block data is ${e.length()} in length which is less than the minimimum size required of ${Wt}`);const t=e.readUInt8("block.protocolVersion"),n=e.readUInt8("block.numParents"),i=[];for(let t=0;t<n;t++){const n=e.readFixedHex(`block.parentBlockId${t}`,u);i.push(n)}const o=Vt(e);if(o&&4===o.type)throw new Error("Blocks can not contain receipt or treasury transaction payloads");const r=e.readUInt64("block.nonce"),a=e.unused();if(0!==a)throw new Error(`Block data length ${e.length()} has unused data ${a}`);return{protocolVersion:t,parents:i,payload:o,nonce:r.toString()}}function en(e,t){var n,i,o,a;e.writeUInt8("block.protocolVersion",null!==(n=t.protocolVersion)&&void 0!==n?n:2);const s=null!==(o=null===(i=t.parents)||void 0===i?void 0:i.length)&&void 0!==o?o:0;if(e.writeUInt8("block.numParents",s),t.parents){if(s>Zt)throw new Error(`A maximum of ${Zt} parents is allowed, you provided ${s}`);if(new Set(t.parents).size!==s)throw new Error("The block parents must be unique");const n=t.parents.slice().sort();for(let i=0;i<s;i++){if(n[i]!==t.parents[i])throw new Error("The block parents must be lexographically sorted");e.writeFixedHex(`block.parentBlockId${i+1}`,u,t.parents[i])}}if(t.payload&&6!==t.payload.type&&7!==t.payload.type&&5!==t.payload.type)throw new Error("Blocks can only contain transaction, milestone or tagged data payloads");Xt(e,t.payload),e.writeUInt64("block.nonce",r.default(null!==(a=t.nonce)&&void 0!==a?a:"0"))}class tn extends Error{constructor(e,t,n,i){super(e),this.route=t,this.httpStatus=n,this.code=i}}class nn{static calculateBlockId(e){const i=new n.WriteStream;en(i,e);const o=i.finalBytes();return n.Converter.bytesToHex(t.Blake2b.sum256(o),!0)}static outputIdFromTransactionData(e,t){const i=new n.WriteStream;i.writeFixedHex("transactionId",d,e),i.writeUInt16("outputIndex",t);const o=i.finalBytes();return n.Converter.bytesToHex(o,!0)}static transactionIdFromTransactionPayload(e){const t=this.getTransactionPayloadHash(e);return n.Converter.bytesToHex(t,!0)}static getTransactionEssenceHash(e){const i=new n.WriteStream;_t(i,e);const o=i.finalBytes();return t.Blake2b.sum256(o)}static getTransactionPayloadHash(e){const i=new n.WriteStream;Dt(i,e);const o=i.finalBytes();return t.Blake2b.sum256(o)}static inputFromOutputId(e){const t=new n.ReadStream(n.Converter.hexToBytes(e));return{type:0,transactionId:t.readFixedHex("transactionId",d),transactionOutputIndex:t.readUInt16("outputIndex")}}static getInputsCommitment(e){const i=new t.Blake2b(t.Blake2b.SIZE_256);for(let o=0;o<e.length;o++){const r=new n.WriteStream;Et(r,e[o]),i.update(t.Blake2b.sum256(r.finalBytes()))}return n.Converter.bytesToHex(i.final(),!0)}static getStorageDeposit(e,t){const i=new n.WriteStream;Et(i,e);const o=i.finalBytes(),r=t.vByteFactorKey*nn.OUTPUT_ID_LENGTH+t.vByteFactorData*(u+nn.CONFIRMED_MILESTONE_INDEX_LENGTH+nn.CONFIRMED_UINIX_TIMESTAMP_LENGTH),a=t.vByteFactorData*o.length+r;return t.vByteCost*a}static resolveIdFromOutputId(e){return n.Converter.bytesToHex(t.Blake2b.sum256(n.Converter.hexToBytes(e)),!0)}static constructTokenId(e,t,i){const o=new n.WriteStream;h(o,{type:8,aliasId:e});const r=o.finalBytes(),a=new n.WriteStream;a.writeUInt32("serialNumber",t);const s=a.finalBytes(),u=new n.WriteStream;u.writeUInt8("tokenSchemeType",i);const d=[...r,...s,...u.finalBytes()];return n.Converter.bytesToHex(new Uint8Array(d),!0)}static networkIdFromNetworkName(e){const i=t.Blake2b.sum256(n.Converter.utf8ToBytes(e));return n.BigIntHelper.read8(i,0).toString()}}function on(e){throw new Error(e)}function rn(e,t,n){if(e.length>0){(e[0],new Set(e)).size!==e.length&&on(`${t} must not contain more than one ${n} of each type.`)}}function an(e,t,n){if(e.length>=2){e.slice(1).every(((t,n)=>t.type>e[n].type))||on(`${t} ${n}s must be sorted in ascending order based on their ${n} Type.`)}}function sn(e,t,n,i){if(e<t||e>n){on(t===n?`${i} count must be equal to ${n}.`:`${i} count must be between ${t} and ${n}.`)}}function un(e){(e.length<1||e.length>J)&&on("Inputs count must be between 1 and 128.");for(const t of e){1!==e.filter((e=>e.transactionId===t.transactionId&&e.transactionOutputIndex===t.transactionOutputIndex)).length&&on("Each pair of Transaction Id and Transaction Output Index must be unique in the list of inputs.")}for(const t of e)dn(t)}function dn(e){0!==e.type&&on("Input type must denote a UTXO Input."),(e.transactionOutputIndex<0||e.transactionOutputIndex>=It)&&on("Transaction Output Index must be between 0 and 128.")}nn.CONFIRMED_MILESTONE_INDEX_LENGTH=4,nn.CONFIRMED_UINIX_TIMESTAMP_LENGTH=4,nn.OUTPUT_ID_LENGTH=34;const ln=2*a.ADDRESS_LENGTH+2;function cn(e){switch(e.type){case 0:e.pubKeyHash.length!==ln&&on(`Ed25519 Address must have ${ln} characters.`);break;case 8:66!==e.aliasId.length&&on("Alias id must have 66 characters.");break;case s:66!==e.nftId.length&&on("Nft id must have 66 characters.");break;default:on(`Unrecognized Address type ${e.type}`)}}const pn=8192;function hn(e){if(e){rn(e.map((e=>e.type)),"Output","feature"),an(e,"Output","Feature");for(const t of e)fn(t)}}function fn(e){switch(e.type){case 0:case 1:cn(e.address);break;case 2:!function(e){0===e.data.length&&on("Metadata feature data field must be greater than zero.");n.HexHelper.stripPrefix(e.data).length/2>pn&&on("Metadata length must not be greater than Max Metadata Length.")}(e);break;case 3:!function(e){0===e.tag.length&&on("Tag feature tag field must be greater than zero.");n.HexHelper.stripPrefix(e.tag).length/2>ke&&on("Tag length must not be greater than Max Tag Length.")}(e);break;default:on(`Unrecognized Feature type ${e.type}`)}}function mn(e,t,n){rn(e.map((e=>e.type)),"Output","unlock condition"),an(e,"Output","Unlock Condition");for(const i of e)yn(i,t,n)}function yn(e,t,n){switch(e.type){case 0:case 4:case 5:case 6:cn(e.address);break;case 1:t&&n?function(e,t,n){r.default(e.amount).leq(r.default.zero)&&on("Storage deposit amount must be larger than zero.");cn(e.returnAddress);const i=function(e,t){const n={type:3,amount:"0",unlockConditions:[{type:0,address:e}]};return nn.getStorageDeposit(n,t)}(e.returnAddress,n);r.default(e.amount).lt(i)&&on("Storage deposit return amount is less than the min storage deposit.");r.default(e.amount).gt(t)&&on("Storage deposit return amount exceeds target output's deposit.")}(e,t,n):on("Must provide Output amount and Rent structure to validate storage deposit return unlock condition.");break;case 2:0===e.unixTime&&on("Time unlock condition must be greater than zero.");break;case 3:!function(e){if(0===e.unixTime)throw new Error("Expiration unlock condition must be greater than zero.");cn(e.returnAddress)}(e);break;default:on(`Unrecognized Unlock condition type ${e.type}`)}}function gn(e){if(e){const t=e.map((e=>e.id));rn(t,"Native tokens","token"),e.length>ve&&on("Native tokens count must not be greater than max native token count (64).");const n=t.slice().sort(((e,t)=>e.localeCompare(t)));t.toString()!==n.toString()&&on("Native Tokens must be lexicographically sorted based on Token id.");for(const t of e)Tn(t)}}function Tn(e){r.default(n.HexHelper.toBigInt256(e.amount)).leq(r.default.zero)&&on(`Native token ${e.id} must have a value greater than zero.`)}const In=new Map([[3,{minUnlockConditions:1,unlockConditions:[0,1,2,3],features:[0,2,3]}],[4,{minUnlockConditions:2,unlockConditions:[4,5],features:[0,2],immutableFeatures:[1,2]}],[5,{minUnlockConditions:1,unlockConditions:[6],features:[2],immutableFeatures:[2]}],[6,{minUnlockConditions:1,unlockConditions:[0,1,2,3],features:[0,2,3],immutableFeatures:[1,2]}]]),wn=new Map([[0,"Address Unlock Condition"],[1,"Storage Deposit Return Unlock Condition"],[2,"Timelock Unlock Condition"],[3,"Expiration Unlock Condition"],[4,"State Controller Address Unlock Condition"],[5,"Governor Address Unlock Condition"],[6,"Immutable Alias Address Unlock Condition"]]),kn=new Map([[0,"Sender Feature"],[1,"Issuer Feature"],[2,"Metadata Feature"],[3,"Tag Feature"]]),Un=new Map([[3,"Basic output"],[4,"Alias output"],[5,"Foundry output"],[6,"NFT output"]]);function En(e,t){const n=e.type,i=In.get(e.type),o=Un.get(e.type);if(!o||!i)throw new Error(`Unsupported output for common rules validation (type: ${e.type})`);if(function(e,t){r.default(e).leq(r.default.zero)&&on(`${t} amount field must be greater than zero.`)}(e.amount,o),function(e,t,n){r.default(e).gt(t)&&on(`${n} amount field must not be greater than max token supply.`)}(e.amount,t.tokenSupply,o),gn(e.nativeTokens),e.unlockConditions){const t=i.minUnlockConditions,r=i.unlockConditions.length;sn(e.unlockConditions.length,t,r,`${o} Unlock Conditions`),function(e,t,n){var i,o;const r=null!==(o=null===(i=In.get(e))||void 0===i?void 0:i.unlockConditions)&&void 0!==o?o:[];if(!t.every((e=>r.includes(e.type)))){on(`${n} unlock condition type of an unlock condition must define one of the following types: ${$n(r,wn).join(", ")}.`)}}(n,e.unlockConditions,o)}if(e.features){const t=i.features.length;sn(e.features.length,0,t,`${o} Features`),function(e,t,n){var i,o;const r=null!==(o=null===(i=In.get(e))||void 0===i?void 0:i.features)&&void 0!==o?o:[];if(!t.every((e=>r.includes(e.type)))){on(`${n} feature type of a feature must define one of the following types: ${$n(r,kn).join(", ")}.`)}}(n,e.features,o)}if(3!==n&&e.immutableFeatures&&i.immutableFeatures){const t=i.immutableFeatures.length;sn(e.immutableFeatures.length,0,t,`${o} Immutable Features`),function(e,t,n){var i,o;const r=null!==(o=null===(i=In.get(e))||void 0===i?void 0:i.immutableFeatures)&&void 0!==o?o:[];if(!t.every((e=>r.includes(e.type)))){on(`${n} feature type of an Immutable Feature must define one of the following types: ${$n(r,kn).join(", ")}.`)}}(n,e.immutableFeatures,o)}}function $n(e,t){const n=[];for(const i of e){const e=t.get(i);e&&n.push(e)}return n}function vn(e,t){4!==e.type&&on(`Type mismatch in alias output ${e.type}`),En(e,t),"0x0000000000000000000000000000000000000000000000000000000000000000"!==e.aliasId||0===e.stateIndex&&0===e.foundryCounter||on("Alias output Alias ID is zeroed out, State Index and Foundry Counter must be 0."),e.stateMetadata&&n.HexHelper.stripPrefix(e.stateMetadata).length/2>pn&&on("Alias output state metadata length must not be greater than max metadata length.");for(const t of e.unlockConditions)4!==t.type&&5!==t.type||8!==t.address.type||t.address.aliasId!==e.aliasId||on("Alias output Address field of the State Controller Address Unlock Condition and Governor Address Unlock Condition must not be the same as the Alias address derived from Alias ID.");mn(e.unlockConditions),hn(e.features),hn(e.immutableFeatures)}function _n(e,t){3!==e.type&&on(`Type mismatch in basic output ${e.type}`),En(e,t),e.unlockConditions.some((e=>0===e.type))?mn(e.unlockConditions,e.amount,t.rentStructure):on("Basic output Unlock Conditions must define an Address Unlock Condition."),hn(e.features)}function Nn(e){0!==e.type&&on("Token scheme type must denote a Simple token scheme.");const t=n.HexHelper.toBigInt256(e.mintedTokens),i=n.HexHelper.toBigInt256(e.meltedTokens);t.minus(i).gt(n.HexHelper.toBigInt256(e.maximumSupply))&&on("The difference of Minted Tokens and Melted Tokens must not be greater than Maximum Supply."),n.HexHelper.toBigInt256(e.meltedTokens).gt(n.HexHelper.toBigInt256(e.mintedTokens))&&on("Melted Tokens must not be greater than Minted Tokens."),n.HexHelper.toBigInt256(e.maximumSupply).leq(r.default.zero)&&on("Token Maximum Supply must be larger than zero.")}function xn(e,t){5!==e.type&&on(`Type mismatch in foundry output ${e.type}.`),En(e,t),e.tokenScheme&&0===e.tokenScheme.type?Nn(e.tokenScheme):on("Foundry output Token Scheme must define Simple Token Scheme."),mn(e.unlockConditions),hn(e.features),hn(e.immutableFeatures)}function An(e,t){6!==e.type&&on(`Type mismatch in NFT output ${e.type}`),En(e,t),e.unlockConditions.some((e=>0===e.type))?(e.unlockConditions.map((t=>{if(0===t.type&&t.address.type===s&&t.address.nftId===e.nftId)throw new Error("NFT output Address field of the Address Unlock Condition must not be the same as the NFT address derived from NFT ID.")})),mn(e.unlockConditions,e.amount,t.rentStructure)):on("NFT output Unlock Conditions must define an Address Unlock Condition."),hn(e.features),hn(e.immutableFeatures)}function Sn(e,t){sn(e.length,1,It,"Outputs"),function(e,t){let n=0;for(const t of e)n+=Number(t.amount);n>t&&on(`The sum of all outputs amount field must be less then ${t}.`)}(e,Number(t.tokenSupply)),function(e){let t=0;for(const n of e)if(2!==n.type&&n.nativeTokens){const e=n.nativeTokens.map((e=>e.id));t+=new Set(e).size}t>ve&&on("The count of all distinct native tokens present in outputs must be less then 64.")}(e);for(const n of e)Cn(n,t)}function Cn(e,t){switch(e.type){case 2:on("Output Type must be one of the following: Basic, Alias, Foundry and NFT.");break;case 3:_n(e,t);break;case 4:vn(e,t);break;case 5:xn(e,t);break;case 6:An(e,t);break;default:on(`Unrecognized output type ${e.type}`)}}function On(e,t){1!==e.type&&on("Transaction Essence Type value must be 1."),e.networkId!==nn.networkIdFromNetworkName(t.networkName)&&on("Network ID must match the value of the current network."),un(e.inputs),Sn(e.outputs,t),e.payload&&bn(e.payload)}function bn(e){5!==e.type&&on("Transaction Essence payload type must be Tagged data payload type."),zn(e)}function Mn(e){const t=[];for(let n=0;n<e.length;n++){const i=e[n];switch(i.type){case 0:t.some((e=>e.type===i.signature.type&&e.publicKey===i.signature.publicKey&&e.signature===i.signature.signature))&&on(`The Signature Unlock at index ${n} must be unique.`),t.push(i.signature),Pn(i);break;case 1:case 2:case 3:Hn(i,n,e[i.reference]);break;default:on("Unlock type must match one of these types: Signature, Reference, Alias and NFT.")}}}function Pn(e){if(0!==e.signature.type)throw new Error("Signature must contain an Ed25519 Signature.")}function Hn(e,t,n){e.reference>=t&&on(`The Reference Unlock at index ${t} must have Reference < ${t}`),void 0!==n&&0===n.type||on(`The Unlock at index ${t} must Reference a Signature Unlock.`),(e.reference<0||e.reference>=J)&&on("Reference Unlock Index must be between 0 and 128.")}function Rn(e,t){if(e)switch(e.type){case 6:Fn(e,t);break;case 7:case 4:break;case 5:zn(e);break;default:on(`Unrecognized transaction type ${e.type}`)}else;}function Fn(e,t){if(6===e.type){e.unlocks.length!==e.essence.inputs.length&&on("Transaction payload unlocks count must match inputs count of the Transaction Essence."),On(e.essence,t),Mn(e.unlocks)}else on(`Unrecognized transaction type ${e.type}`)}function zn(e){const t=e.tag?n.HexHelper.stripPrefix(null==e?void 0:e.tag):void 0;t&&t.length/2>ke&&on("Tagged Data Payload tag length exceeds the maximum size of 128.")}function Bn(e,t){let n={isValid:!0};try{Ln(e.parents),Rn(e.payload,t)}catch(e){n={isValid:!1,error:e.message}}return n}function Ln(e){(e.length<1||e.length>8)&&on("Parents count must be between 1 and 8.");const t=e.slice().sort(((e,t)=>e.localeCompare(t)));e.toString()!==t.toString()&&on("Parents must be lexicographically sorted based on Parent id.")}class Dn{constructor(e,t){var n,i,o,r;if(!e)throw new Error("The endpoint can not be empty");if(this._endpoint=e.replace(/\/+$/,""),this._basePath=null!==(n=null==t?void 0:t.basePath)&&void 0!==n?n:"/api/",this._coreApiPath=`${this._basePath}core/v2/`,this._powProvider=null==t?void 0:t.powProvider,this._timeout=null==t?void 0:t.timeout,this._userName=null==t?void 0:t.userName,this._password=null==t?void 0:t.password,this._headers=null==t?void 0:t.headers,this._protocolVersion=null!==(i=null==t?void 0:t.protocolVersion)&&void 0!==i?i:2,this._userName&&this._password&&!this._endpoint.startsWith("https"))throw new Error("Basic authentication requires the endpoint to be https");if(this._userName&&this._password&&((null===(o=this._headers)||void 0===o?void 0:o.authorization)||(null===(r=this._headers)||void 0===r?void 0:r.Authorization)))throw new Error("You can not supply both user/pass and authorization header")}async health(){const e=await this.fetchStatus("/health");if(200===e)return!0;if(503===e)return!1;throw new tn("Unexpected response code","/health",e)}async routes(){return this.fetchJson(this._basePath,"get","routes")}async info(){return this.fetchJson(this._coreApiPath,"get","info")}async tips(){return this.fetchJson(this._coreApiPath,"get","tips")}async block(e){return this.fetchJson(this._coreApiPath,"get",`blocks/${e}`)}async blockMetadata(e){return this.fetchJson(this._coreApiPath,"get",`blocks/${e}/metadata`)}async blockRaw(e){return this.fetchBinary(this._coreApiPath,"get",`blocks/${e}`)}async blockSubmit(e,t,i=40,o){var r,a,s,u;let d;e.protocolVersion=this._protocolVersion,(this._powProvider||o)&&(d=await this.protocolInfo());let l=0;if(this._powProvider&&(l=null!==(r=null==d?void 0:d.minPowScore)&&void 0!==r?r:0,!e.parents||0===e.parents.length)){const t=await this.tips();e.parents=t.tips.slice(0,Zt)}const c={protocolVersion:null!==(a=e.protocolVersion)&&void 0!==a?a:2,parents:null!==(s=e.parents)&&void 0!==s?s:[],payload:e.payload,nonce:null!==(u=e.nonce)&&void 0!==u?u:"0"},p=new n.WriteStream;en(p,c);let h=p.finalBytes();if(h.length>Jt)throw new Error(`The block length is ${h.length}, which exceeds the maximum size of 32768`);if(this._powProvider){let e="0";for(let o=0;o<=i&&(e=o===i?await this._powProvider.pow(h,l):await this._powProvider.pow(h,l,t),"0"===e);o++){const e=await this.tips();c.parents=e.tips.slice(0,Zt);const t=new n.WriteStream;en(t,c),h=t.finalBytes()}c.nonce=e.toString()}if(o&&d){const e=Bn(c,d);if(e.error)throw new Error(e.error)}return(await this.fetchJson(this._coreApiPath,"post","blocks",c)).blockId}async blockSubmitRaw(e,i,o=40,a){var s,u;if(e.length>Jt)throw new Error(`The block length is ${e.length}, which exceeds the maximum size of 32768`);let d;if((this._powProvider||a)&&(d=await this.protocolInfo()),e[0]=this._protocolVersion,this._powProvider&&t.ArrayHelper.equal(e.slice(-8),Dn.NONCE_ZERO)){let t="0";for(let r=0;r<=o&&(t=r===o?await this._powProvider.pow(e,null!==(s=null==d?void 0:d.minPowScore)&&void 0!==s?s:0):await this._powProvider.pow(e,null!==(u=null==d?void 0:d.minPowScore)&&void 0!==u?u:0,i),"0"===t);r++){const t=Qt(new n.ReadStream(e)),i=await this.tips();t.parents=i.tips.slice(0,Zt);const o=new n.WriteStream;en(o,t),e=o.finalBytes()}n.BigIntHelper.write8(r.default(t),e,e.length-8)}if(a&&d){const t=Bn(Qt(new n.ReadStream(e)),d);if(t.error)throw new Error(t.error)}return(await this.fetchBinary(this._coreApiPath,"post","blocks",e)).blockId}async transactionIncludedBlock(e){return this.fetchJson(this._coreApiPath,"get",`transactions/${e}/included-block`)}async transactionIncludedBlockRaw(e){return this.fetchBinary(this._coreApiPath,"get",`transactions/${e}/included-block`)}async output(e){return this.fetchJson(this._coreApiPath,"get",`outputs/${e}`)}async outputMetadata(e){return this.fetchJson(this._coreApiPath,"get",`outputs/${e}/metadata`)}async outputRaw(e){return this.fetchBinary(this._coreApiPath,"get",`outputs/${e}`)}async milestoneByIndex(e){return this.fetchJson(this._coreApiPath,"get",`milestones/by-index/${e}`)}async milestoneByIndexRaw(e){return this.fetchBinary(this._coreApiPath,"get",`milestones/by-index/${e}`)}async milestoneUtxoChangesByIndex(e){return this.fetchJson(this._coreApiPath,"get",`milestones/by-index/${e}/utxo-changes`)}async milestoneById(e){return this.fetchJson(this._coreApiPath,"get",`milestones/${e}`)}async milestoneByIdRaw(e){return this.fetchBinary(this._coreApiPath,"get",`milestones/${e}`)}async milestoneUtxoChangesById(e){return this.fetchJson(this._coreApiPath,"get",`milestones/${e}/utxo-changes`)}async treasury(){return this.fetchJson(this._coreApiPath,"get","treasury")}async receipts(e){return this.fetchJson(this._coreApiPath,"get","receipts"+(void 0!==e?`/${e}`:""))}async peers(){return this.fetchJson(this._coreApiPath,"get","peers")}async peerAdd(e,t){return this.fetchJson(this._coreApiPath,"post","peers",{multiAddress:e,alias:t})}async peerDelete(e){return this.fetchJson(this._coreApiPath,"delete",`peers/${e}`)}async peer(e){return this.fetchJson(this._coreApiPath,"get",`peers/${e}`)}async protocolInfo(){return(await this.info()).protocol}async pluginFetch(e,t,n,i,o){return this.fetchJson(this._basePath,t,`${e}${n}${this.combineQueryParams(i)}`,o)}async fetchStatus(e){return(await this.fetchWithTimeout("get",e)).status}async fetchJson(e,t,n,i){const o=await this.fetchWithTimeout(t,`${e}${n}`,{"Content-Type":"application/json"},i?JSON.stringify(i):void 0);let r,a;if(o.ok){if(204===o.status)return{};try{const e=await o.json();if(!e.error)return e;r=e.error.message,a=e.error.code}catch{}}if(!r)try{const e=await o.json();e.error&&(r=e.error.message,a=e.error.code)}catch{}if(!r)try{const e=await o.text();if(e.length>0){const t=/code=(\d+), message=(.*)/.exec(e);3===(null==t?void 0:t.length)?(a=t[1],r=t[2]):r=e}}catch{}throw new tn(null!=r?r:o.statusText,n,o.status,null!=a?a:o.status.toString())}async fetchBinary(e,t,n,i){var o,r,a;const s=await this.fetchWithTimeout(t,`${e}${n}`,{"Content-Type":"application/vnd.iota.serializer-v1",Accept:"application/vnd.iota.serializer-v1"},i);let u;if(s.ok){if("get"===t)return new Uint8Array(await s.arrayBuffer());if(u=await s.json(),!(null==u?void 0:u.error))return u}throw u||(u=await s.json()),new tn(null!==(r=null===(o=null==u?void 0:u.error)||void 0===o?void 0:o.message)&&void 0!==r?r:s.statusText,n,s.status,null===(a=null==u?void 0:u.error)||void 0===a?void 0:a.code)}async fetchWithTimeout(e,t,i,o){let r,a;void 0!==this._timeout&&(r=new AbortController,a=setTimeout((()=>{r&&r.abort()}),this._timeout));const s={};if(this._headers)for(const e in this._headers)s[e]=this._headers[e];if(i)for(const e in i)s[e]=i[e];if(this._userName&&this._password){const e=n.Converter.bytesToBase64(n.Converter.utf8ToBytes(`${this._userName}:${this._password}`));s.Authorization=`Basic ${e}`}try{return await fetch(`${this._endpoint}${t}`,{method:e,headers:s,body:o,signal:r?r.signal:void 0})}catch(e){throw e instanceof Error&&"AbortError"===e.name?new Error("Timeout"):e}finally{a&&clearTimeout(a)}}combineQueryParams(e){return e&&e.length>0?`?${e.join("&")}`:""}}Dn.NONCE_ZERO=new Uint8Array([0,0,0,0,0,0,0,0]);class Gn{constructor(e,t){var n;this._client="string"==typeof e?new Dn(e):e,this._basePluginPath=null!==(n=null==t?void 0:t.basePluginPath)&&void 0!==n?n:"indexer/v1/"}async basicOutputs(e){const t=[];return e&&(void 0!==e.addressBech32&&t.push(`address=${e.addressBech32}`),void 0!==e.hasStorageDepositReturn&&t.push(`hasStorageDepositReturn=${e.hasStorageDepositReturn}`),void 0!==e.storageDepositReturnAddressBech32&&t.push(`storageDepositReturnAddress=${e.storageDepositReturnAddressBech32}`),void 0!==e.hasExpiration&&t.push(`hasExpiration=${e.hasExpiration}`),void 0!==e.expirationReturnAddressBech32&&t.push(`expirationReturnAddress=${e.expirationReturnAddressBech32}`),void 0!==e.expiresBefore&&t.push(`expiresBefore=${e.expiresBefore}`),void 0!==e.expiresAfter&&t.push(`expiresAfter=${e.expiresAfter}`),void 0!==e.hasTimelock&&t.push(`hasTimelock=${e.hasTimelock}`),void 0!==e.timelockedBefore&&t.push(`timelockedBefore=${e.timelockedBefore}`),void 0!==e.timelockedAfter&&t.push(`timelockedAfter=${e.timelockedAfter}`),void 0!==e.hasNativeTokens&&t.push(`hasNativeTokens=${e.hasNativeTokens}`),void 0!==e.minNativeTokenCount&&t.push(`minNativeTokenCount=${e.minNativeTokenCount}`),void 0!==e.maxNativeTokenCount&&t.push(`maxNativeTokenCount=${e.maxNativeTokenCount}`),void 0!==e.senderBech32&&t.push(`sender=${e.senderBech32}`),void 0!==e.tagHex&&t.push(`tag=${e.tagHex}`),void 0!==e.createdBefore&&t.push(`createdBefore=${e.createdBefore}`),void 0!==e.createdAfter&&t.push(`createdAfter=${e.createdAfter}`),void 0!==e.pageSize&&t.push(`pageSize=${e.pageSize}`),void 0!==e.cursor&&t.push(`cursor=${e.cursor}`)),this._client.pluginFetch(this._basePluginPath,"get","outputs/basic",t)}async aliases(e){const t=[];return e&&(void 0!==e.stateControllerBech32&&t.push(`stateController=${e.stateControllerBech32}`),void 0!==e.governorBech32&&t.push(`governor=${e.governorBech32}`),void 0!==e.hasNativeTokens&&t.push(`hasNativeTokens=${e.hasNativeTokens}`),void 0!==e.minNativeTokenCount&&t.push(`minNativeTokenCount=${e.minNativeTokenCount}`),void 0!==e.maxNativeTokenCount&&t.push(`maxNativeTokenCount=${e.maxNativeTokenCount}`),void 0!==e.issuerBech32&&t.push(`issuer=${e.issuerBech32}`),void 0!==e.senderBech32&&t.push(`sender=${e.senderBech32}`),void 0!==e.createdBefore&&t.push(`createdBefore=${e.createdBefore}`),void 0!==e.createdAfter&&t.push(`createdAfter=${e.createdAfter}`),void 0!==e.pageSize&&t.push(`pageSize=${e.pageSize}`),void 0!==e.cursor&&t.push(`cursor=${e.cursor}`)),this._client.pluginFetch(this._basePluginPath,"get","outputs/alias",t)}async alias(e){if(!n.Converter.isHex(e,!0))throw new Error("The alias id does not appear to be hex format");return this._client.pluginFetch(this._basePluginPath,"get",`outputs/alias/${e}`)}async nfts(e){const t=[];return e&&(void 0!==e.addressBech32&&t.push(`address=${e.addressBech32}`),void 0!==e.hasStorageDepositReturn&&t.push(`hasStorageDepositReturn=${e.hasStorageDepositReturn}`),void 0!==e.storageDepositReturnAddressBech32&&t.push(`storageDepositReturnAddress=${e.storageDepositReturnAddressBech32}`),void 0!==e.hasExpiration&&t.push(`hasExpiration=${e.hasExpiration}`),void 0!==e.expirationReturnAddressBech32&&t.push(`expirationReturnAddress=${e.expirationReturnAddressBech32}`),void 0!==e.expiresBefore&&t.push(`expiresBefore=${e.expiresBefore}`),void 0!==e.expiresAfter&&t.push(`expiresAfter=${e.expiresAfter}`),void 0!==e.hasTimelock&&t.push(`hasTimelock=${e.hasTimelock}`),void 0!==e.timelockedBefore&&t.push(`timelockedBefore=${e.timelockedBefore}`),void 0!==e.timelockedAfter&&t.push(`timelockedAfter=${e.timelockedAfter}`),void 0!==e.hasNativeTokens&&t.push(`hasNativeTokens=${e.hasNativeTokens}`),void 0!==e.minNativeTokenCount&&t.push(`minNativeTokenCount=${e.minNativeTokenCount}`),void 0!==e.maxNativeTokenCount&&t.push(`maxNativeTokenCount=${e.maxNativeTokenCount}`),void 0!==e.issuerBech32&&t.push(`issuer=${e.issuerBech32}`),void 0!==e.senderBech32&&t.push(`sender=${e.senderBech32}`),void 0!==e.tagHex&&t.push(`tag=${e.tagHex}`),void 0!==e.createdBefore&&t.push(`createdBefore=${e.createdBefore}`),void 0!==e.createdAfter&&t.push(`createdAfter=${e.createdAfter}`),void 0!==e.pageSize&&t.push(`pageSize=${e.pageSize}`),void 0!==e.cursor&&t.push(`cursor=${e.cursor}`)),this._client.pluginFetch(this._basePluginPath,"get","outputs/nft",t)}async nft(e){if(!n.Converter.isHex(e,!0))throw new Error("The nft id does not appear to be hex format");return this._client.pluginFetch(this._basePluginPath,"get",`outputs/nft/${e}`)}async foundries(e){const t=[];return e&&(void 0!==e.aliasAddressBech32&&t.push(`aliasAddress=${e.aliasAddressBech32}`),void 0!==e.hasNativeTokens&&t.push(`hasNativeTokens=${e.hasNativeTokens}`),void 0!==e.minNativeTokenCount&&t.push(`minNativeTokenCount=${e.minNativeTokenCount}`),void 0!==e.maxNativeTokenCount&&t.push(`maxNativeTokenCount=${e.maxNativeTokenCount}`),void 0!==e.createdBefore&&t.push(`createdBefore=${e.createdBefore}`),void 0!==e.createdAfter&&t.push(`createdAfter=${e.createdAfter}`),void 0!==e.pageSize&&t.push(`pageSize=${e.pageSize}`),void 0!==e.cursor&&t.push(`cursor=${e.cursor}`)),this._client.pluginFetch(this._basePluginPath,"get","outputs/foundry",t)}async foundry(e){if(!n.Converter.isHex(e,!0))throw new Error("The foundry id does not appear to be hex format");return this._client.pluginFetch(this._basePluginPath,"get",`outputs/foundry/${e}`)}}async function Kn(e,t){var i;const o="string"==typeof e?new Dn(e):e,a=new Gn(o);let s=r.default(0),u=0;const d={};let l,c,p,h;do{l=await a.basicOutputs({addressBech32:t,cursor:p});for(const e of l.items){const t=await o.output(e);if(!t.metadata.isSpent){s=s.plus(t.output.amount);const e=t.output;if(Array.isArray(e.nativeTokens))for(const t of e.nativeTokens)d[t.id]=null!==(i=d[t.id])&&void 0!==i?i:r.default(0),d[t.id]=d[t.id].add(n.HexHelper.toBigInt256(t.amount))}u=t.metadata.ledgerIndex}p=l.cursor}while(p&&l.items.length>0);do{c=await a.basicOutputs({expirationReturnAddressBech32:t,expiresBefore:Math.floor(Date.now()/1e3),cursor:h});for(const e of c.items){const t=await o.output(e);t.metadata.isSpent||(s=s.plus(t.output.amount))}h=c.cursor}while(h&&c.items.length>0);return{balance:s,nativeTokens:d,ledgerIndex:u}}const qn=4218;function Yn(e,n=4218){const i=new t.Bip32Path(Vn(n));return i.pushHardened(e.accountIndex),i.pushHardened(e.isInternal?1:0),i.pushHardened(e.addressIndex),e.isInternal?(e.isInternal=!1,e.addressIndex++):e.isInternal=!0,i.toString()}function Vn(e){return`m/44'/${e}'`}class Xn{static toBech32(e,n,i){const o=new Uint8Array(1+n.length);return o[0]=e,o.set(n,1),t.Bech32.encode(i,o)}static fromBech32(e,n){const i=t.Bech32.decode(e);if(i){if(i.humanReadablePart!==n)throw new Error(`The hrp part of the address should be ${n}, it is ${i.humanReadablePart}`);if(0===i.data.length)throw new Error("The data part of the address should be at least length 1, it is 0");return{addressType:i.data[0],addressBytes:i.data.slice(1)}}}static addressFromBech32(e,t){const i=Xn.fromBech32(e,t);if(!i)throw new Error("Can't decode address");switch(i.addressType){case 0:return{type:0,pubKeyHash:n.Converter.bytesToHex(i.addressBytes,!0)};case 8:return{type:8,aliasId:n.Converter.bytesToHex(i.addressBytes,!0)};case s:return{type:s,nftId:n.Converter.bytesToHex(i.addressBytes,!0)};default:throw new Error("Unexpected address type")}}static matches(e,n){return t.Bech32.matches(n,e)}}async function Wn(e,t,n,i){var o;return Jn(e,t,{accountIndex:n,addressIndex:null!==(o=null==i?void 0:i.startIndex)&&void 0!==o?o:0,isInternal:!1},Yn,i)}async function Jn(e,n,i,o,s){var u,d;const l="string"==typeof e?new Dn(e):e,c=await l.protocolInfo(),p=null!==(u=null==s?void 0:s.requiredCount)&&void 0!==u?u:Number.MAX_SAFE_INTEGER,h=null!==(d=null==s?void 0:s.zeroCount)&&void 0!==d?d:20;let f=!1;const m=[];let y=0;do{const e=o(i),s=n.generateSeedFromPath(new t.Bip32Path(e)),u=new a(s.keyPair().publicKey).toAddress(),d=Xn.toBech32(0,u,c.bech32Hrp),g=await Kn(l,d);g.balance.equals(r.default(0))?(y++,y>=h&&(f=!0)):(m.push({address:d,path:e,balance:g.balance}),m.length===p&&(f=!0))}while(!f);return m}async function Zn(e,t){const n="string"==typeof e?new Dn(e):e,i=await n.block(t);if(!i)throw new Error("The block does not exist.");const o=await n.tips();o.tips.includes(t)||o.tips.unshift(t),o.tips.length>Zt&&(o.tips=o.tips.slice(0,Zt)),o.tips.sort();const r={parents:o.tips};return{block:i,blockId:await n.blockSubmit(r)}}async function jn(e,t){const n="string"==typeof e?new Dn(e):e,i=await n.block(t);if(!i)throw new Error("The block does not exist.");const o={payload:i.payload};return{block:i,blockId:await n.blockSubmit(o)}}async function Qn(e,t,n,i,o,r){const a="string"==typeof e?new Dn(e):e,s=await a.protocolInfo(),u={protocolVersion:2,parents:[],payload:ei(nn.networkIdFromNetworkName(s.networkName),t,n,i),nonce:"0"};return{blockId:await a.blockSubmit(u,o,r),block:u}}function ei(e,i,o,r){if(!i||0===i.length)throw new Error("You must specify some inputs");if(!o||0===o.length)throw new Error("You must specify some outputs");let a,s;if((null==r?void 0:r.tag)&&(a="string"==typeof(null==r?void 0:r.tag)?n.Converter.utf8ToHex(r.tag,!0):n.Converter.bytesToHex(r.tag,!0),(a.length-2)/2>ke))throw new Error(`The tag length is ${a.length/2}, which exceeds the maximum size of 64`);(null==r?void 0:r.data)&&(s=n.HexHelper.addPrefix("string"==typeof r.data?n.Converter.utf8ToHex(r.data,!0):n.Converter.bytesToHex(r.data,!0)));const u=[];for(const e of o){if(0!==e.addressType)throw new Error(`Unrecognized output address type ${e.addressType}`);{const t={type:3,amount:e.amount.toString(),nativeTokens:e.nativeTokens,unlockConditions:[{type:0,address:{type:e.addressType,pubKeyHash:e.address}}],features:e.fatures},i=new n.WriteStream;Et(i,t);const o=i.finalBytes();u.push({output:t,serializedBytes:o,serializedHex:n.Converter.bytesToHex(o)})}}const l=i.map((e=>{const t=new n.WriteStream;t.writeFixedHex("transactionId",d,e.input.transactionId),t.writeUInt16("transactionOutputIndex",e.input.transactionOutputIndex);const i=new n.WriteStream;return Et(i,e.consumingOutput),{...e,inputIdHex:t.finalHex(),consumingOutputBytes:i.finalBytes()}})),c=new t.Blake2b(t.Blake2b.SIZE_256);for(const e of l)c.update(t.Blake2b.sum256(e.consumingOutputBytes));const p=n.Converter.bytesToHex(c.final(),!0),h={type:1,networkId:e,inputs:l.map((e=>e.input)),inputsCommitment:p,outputs:u.map((e=>e.output)),payload:a&&s?{type:5,tag:a,data:s}:void 0},f=new n.WriteStream;_t(f,h);const m=f.finalBytes(),y=t.Blake2b.sum256(m),g=[],T={};for(const e of l){const i=n.Converter.bytesToHex(e.addressKeyPair.publicKey,!0);T[i]?g.push({type:1,reference:T[i].unlockIndex}):(g.push({type:0,signature:{type:0,publicKey:i,signature:n.Converter.bytesToHex(t.Ed25519.sign(e.addressKeyPair.privateKey,y),!0)}}),T[i]={keyPair:e.addressKeyPair,unlockIndex:g.length-1})}return{type:6,essence:h,unlocks:g}}async function ti(e,t,i,o,r,a){var s;const u="string"==typeof e?new Dn(e):e,d=await u.protocolInfo(),l=o.map((e=>{const t=Xn.fromBech32(e.addressBech32,d.bech32Hrp);if(!t)throw new Error("Unable to decode bech32 address");return{address:n.Converter.bytesToHex(t.addressBytes,!0),addressType:t.addressType,amount:e.amount}}));return ii(e,t,{accountIndex:i,addressIndex:null!==(s=null==a?void 0:a.startIndex)&&void 0!==s?s:0,isInternal:!1},Yn,l,r,null==a?void 0:a.zeroCount)}async function ni(e,t,n,i,o,r){var a;const s=i.map((e=>({address:e.addressEd25519,addressType:0,amount:e.amount})));return ii(e,t,{accountIndex:n,addressIndex:null!==(a=null==r?void 0:r.startIndex)&&void 0!==a?a:0,isInternal:!1},Yn,s,o,null==r?void 0:r.zeroCount)}async function ii(e,t,n,i,o,r,a,s,u){const d=await oi(e,t,n,i,o,u),l=await Qn(e,d,o,r,a,s);return{blockId:l.blockId,block:l.block}}async function oi(e,n,i,o,s,u=5){const d="string"==typeof e?new Dn(e):e,l=await d.protocolInfo();let c=r.default(0);for(const e of s)c=c.plus(e.amount);let p=r.default(0);const h=[];let f=!1,m=0;do{const y=o(i),g=n.generateSeedFromPath(new t.Bip32Path(y)).keyPair(),T=new a(g.publicKey).toAddress(),I=new Gn(e),w=await I.basicOutputs({addressBech32:Xn.toBech32(0,T,l.bech32Hrp)});if(0===w.items.length)m++,m>=u&&(f=!0);else for(const e of w.items){const t=await d.output(e);if(!t.metadata.isSpent&&p.lesser(c))if(r.default(t.output.amount).equals(0))m++,m>=u&&(f=!0);else{p=p.plus(t.output.amount);const e={type:0,transactionId:t.metadata.transactionId,transactionOutputIndex:t.metadata.outputIndex};if(h.push({input:e,addressKeyPair:g,consumingOutput:t.output}),p>=c){if(p.minus(c).greater(0)&&3===t.output.type){const e=t.output.unlockConditions.find((e=>0===e.type));e&&0===e.type&&0===e.address.type&&s.push({amount:p.minus(c),address:e.address.pubKeyHash,addressType:e.address.type})}f=!0}}}}while(!f);if(p<c)throw new Error("There are not enough funds in the inputs for the required balance");return h}var ri;Xn.BECH32_DEFAULT_HRP_MAIN="iota",Xn.BECH32_DEFAULT_HRP_DEV="atoi",e.ConflictReason=void 0,(ri=e.ConflictReason||(e.ConflictReason={}))[ri.none=0]="none",ri[ri.inputUTXOAlreadySpent=1]="inputUTXOAlreadySpent",ri[ri.inputUTXOAlreadySpentInThisMilestone=2]="inputUTXOAlreadySpentInThisMilestone",ri[ri.inputUTXONotFound=3]="inputUTXONotFound",ri[ri.inputOutputSumMismatch=4]="inputOutputSumMismatch",ri[ri.invalidSignature=5]="invalidSignature",ri[ri.invalidTimelock=6]="invalidTimelock",ri[ri.invalidNativeTokens=7]="invalidNativeTokens",ri[ri.returnAmountMismatch=8]="returnAmountMismatch",ri[ri.invalidInputUnlock=9]="invalidInputUnlock",ri[ri.invalidInputsCommitment=10]="invalidInputsCommitment",ri[ri.invalidSender=11]="invalidSender",ri[ri.invalidChainState=12]="invalidChainState",ri[ri.semanticValidationFailed=255]="semanticValidationFailed";const ai={[e.ConflictReason.none]:"Not conflicting",[e.ConflictReason.inputUTXOAlreadySpent]:"The referenced UTXO was already spent",[e.ConflictReason.inputUTXOAlreadySpentInThisMilestone]:"The referenced UTXO was already spent while confirming this milestone",[e.ConflictReason.inputUTXONotFound]:"The referenced UTXO cannot be found",[e.ConflictReason.inputOutputSumMismatch]:"The sum of the inputs and output values does not match",[e.ConflictReason.invalidSignature]:"The unlock signature is invalid",[e.ConflictReason.invalidTimelock]:"The configured timelock is not yet expired",[e.ConflictReason.invalidNativeTokens]:"The native tokens are invalid",[e.ConflictReason.returnAmountMismatch]:"The return amount in a transaction is not fulfilled by the output side",[e.ConflictReason.invalidInputUnlock]:"The input unlock is invalid",[e.ConflictReason.invalidInputsCommitment]:"The inputs commitment is invalid",[e.ConflictReason.invalidSender]:"The output contains a Sender with an ident (address) which is not unlocked",[e.ConflictReason.invalidChainState]:"The chain state transition is invalid",[e.ConflictReason.semanticValidationFailed]:"The semantic validation failed"};class si{constructor(e){this._secretKey=null!=e?e:new Uint8Array}static fromMnemonic(e){return new si(t.Bip39.mnemonicToSeed(e))}keyPair(){const e=t.Ed25519.keyPairFromSeed(this._secretKey);return{publicKey:e.publicKey,privateKey:e.privateKey}}generateSeedFromPath(e){const n=t.Slip0010.derivePath(this._secretKey,e);return new si(n.privateKey)}toBytes(){return this._secretKey}}let ui=(e,t)=>void 0!==t?console.log(e,t):console.log(e);function di(e,t){t&&(6===t.type?li(e,t):7===t.type?pi(e,t):4===t.type?gi(e,t):5===t.type&&ci(e,t))}function li(e,t){if(t){if(ui(`${e}Transaction Payload`),1===t.essence.type){if(ui(`${e}\tNetwork Id:`,t.essence.networkId),t.essence.inputs){ui(`${e}\tInputs:`,t.essence.inputs.length);for(const n of t.essence.inputs)wi(`${e}\t\t`,n)}if(ui(`${e}\tInputs Commitment:`,t.essence.inputsCommitment),t.essence.outputs){ui(`${e}\tOutputs:`,t.essence.outputs.length);for(const n of t.essence.outputs)ki(`${e}\t\t`,n)}}if(t.unlocks){ui(`${e}\tUnlocks:`,t.unlocks.length);for(const n of t.unlocks)Ui(`${e}\t\t`,n)}}}function ci(e,t){t&&(ui(`${e}Tagged Data Payload`),ui(`${e}\tTag:`,t.tag?n.Converter.hexToUtf8(t.tag):"None"),ui(`${e}\tData:`,t.data?n.Converter.hexToUtf8(t.data):"None"))}function pi(e,t){if(t){ui(`${e}Milestone Payload`),ui(`${e}\tIndex:`,t.index),ui(`${e}\tTimestamp:`,t.timestamp),ui(`${e}\tProtocol version:`,t.protocolVersion),ui(`${e}\tPreviousMilestoneId:`,t.previousMilestoneId);for(let n=0;n<t.parents.length;n++)ui(`${e}\tParent ${n+1}:`,t.parents[n]);ui(`${e}\tConfirmed Merkle Proof:`,t.inclusionMerkleRoot),ui(`${e}\tApplied Merkle Proof:`,t.appliedMerkleRoot),ui(`${e}\tMetadata:`,t.metadata),hi(`${e}\t`,t.options),ui(`${e}\tSignatures:`,t.signatures.length);for(const n of t.signatures)Ii(`${e}\t\t`,n)}}function hi(e,t){if(t){ui(`${e}Milestone Options`);for(const n of t)fi(`${e}\t\t`,n)}}function fi(e,t){0===t.type?(ui(`${e}\tReceipt Milestone Option`),mi(`${e}\t\t`,t)):1===t.type&&(ui(`${e}\tProtocol Params Milestone Option`),yi(`${e}\t\t`,t))}function mi(e,t){if(t){ui(`${e}Receipt Milestone Option`),ui(`${e}\tMigrated At:`,t.migratedAt),ui(`${e}\tFinal:`,t.final),ui(`${e}\tFunds:`,t.funds.length);for(const n of t.funds)Ei(`${e}\t\t`,n);gi(`${e}\t\t`,t.transaction)}}function yi(e,t){t&&(ui(`${e}Protocol Params Milestone Option`),ui(`${e}\tTarget Milestone Index:`,t.targetMilestoneIndex),ui(`${e}\tProtocol Version:`,t.protocolVersion),ui(`${e}\tParameters:`,t.params))}function gi(e,t){t&&(ui(`${e}Treasury Transaction Payload`),wi(e,t.input),ki(e,t.output))}function Ti(e,t){0===(null==t?void 0:t.type)?(ui(`${e}Ed25519 Address`),ui(`${e}\tPublic Key Hash:`,t.pubKeyHash)):8===(null==t?void 0:t.type)?(ui(`${e}Alias Address`),ui(`${e}\tAlias Id:`,t.aliasId)):(null==t?void 0:t.type)===s&&(ui(`${e}NFT Address`),ui(`${e}\tNFT Id:`,t.nftId))}function Ii(e,t){0===(null==t?void 0:t.type)&&(ui(`${e}Ed25519 Signature`),ui(`${e}\tPublic Key:`,t.publicKey),ui(`${e}\tSignature:`,t.signature))}function wi(e,t){t&&(0===t.type?(ui(`${e}UTXO Input`),ui(`${e}\tTransaction Id:`,t.transactionId),ui(`${e}\tTransaction Output Index:`,t.transactionOutputIndex)):1===t.type&&(ui(`${e}Treasury Input`),ui(`${e}\tMilestone Hash:`,t.milestoneId)))}function ki(e,t){t&&(2===t.type?(ui(`${e}Treasury Output`),ui(`${e}\t\tAmount:`,t.amount)):3===t.type?(ui(`${e}Basic Output`),ui(`${e}\t\tAmount:`,t.amount),$i(`${e}\t\t`,t.nativeTokens),Ai(`${e}\t\t`,t.unlockConditions),_i(`${e}\t\t`,t.features)):4===t.type?(ui(`${e}Alias Output`),ui(`${e}\t\tAmount:`,t.amount),$i(`${e}\t\t`,t.nativeTokens),ui(`${e}\t\tAlias Id:`,t.aliasId),ui(`${e}\t\tState Index:`,t.stateIndex),ui(`${e}\t\tState Metadata:`,t.stateMetadata),ui(`${e}\t\tFoundry Counter:`,t.foundryCounter),Ai(`${e}\t\t`,t.unlockConditions),_i(`${e}\t\t`,t.features),Ni(`${e}\t\t`,t.immutableFeatures)):5===t.type?(ui(`${e}Foundry Output`),ui(`${e}\t\tAmount:`,t.amount),$i(`${e}\t\t`,t.nativeTokens),ui(`${e}\t\tSerial Number:`,t.serialNumber),vi(`${e}\t\t`,t.tokenScheme),Ai(`${e}\t\t`,t.unlockConditions),_i(`${e}\t\t`,t.features),Ni(`${e}\t\t`,t.immutableFeatures)):6===t.type&&(ui(`${e}NFT Output`),ui(`${e}\t\tAmount:`,t.amount),$i(`${e}\t\t`,t.nativeTokens),ui(`${e}\t\tNFT Id:`,t.nftId),Ai(`${e}\t\t`,t.unlockConditions),_i(`${e}\t\t`,t.features),Ni(`${e}\t\t`,t.immutableFeatures)))}function Ui(e,t){t&&(0===t.type?(ui(`${e}\tSignature Unlock`),Ii(`${e}\t\t`,t.signature)):1===t.type?(ui(`${e}\tReference Unlock`),ui(`${e}\t\tReference:`,t.reference)):2===t.type?(ui(`${e}\tAlias Unlock`),ui(`${e}\t\tReference:`,t.reference)):3===t.type&&(ui(`${e}\tNFT Unlock`),ui(`${e}\t\tReference:`,t.reference)))}function Ei(e,t){t&&(ui(`${e}\tFund`),ui(`${e}\t\tTail Transaction Hash:`,t.tailTransactionHash),Ti(`${e}\t\t`,t.address),ui(`${e}\t\tDeposit:`,t.deposit))}function $i(e,t){ui(`${e}Native Tokens`);for(const n of null!=t?t:[])ui(`${e}\t\tId:`,n.id),ui(`${e}\t\tAmount:`,n.amount)}function vi(e,t){0===t.type&&(ui(`${e}\tSimple Token Scheme`),ui(`${e}\t\tMinted Tokens:`,t.mintedTokens),ui(`${e}\t\tMelted Tokens:`,t.meltedTokens),ui(`${e}\t\tMaximum Supply:`,t.maximumSupply))}function _i(e,t){ui(`${e}Features`);for(const n of null!=t?t:[])xi(`${e}\t\t`,n)}function Ni(e,t){ui(`${e}Immutable Features`);for(const n of null!=t?t:[])xi(`${e}\t\t`,n)}function xi(e,t){0===t.type?(ui(`${e}\tSender Feature`),Ti(`${e}\t\t`,t.address)):1===t.type?(ui(`${e}\tIssuer Feature`),Ti(`${e}\t\t`,t.address)):2===t.type?(ui(`${e}\tMetadata Feature`),ui(`${e}\t\tData:`,t.data)):3===t.type&&(ui(`${e}\tTag Feature`),ui(`${e}\t\tTag:`,t.tag))}function Ai(e,t){ui(`${e}Unlock Conditions`);for(const n of t)Si(`${e}\t\t`,n)}function Si(e,t){0===t.type?(ui(`${e}\tAddress Unlock Condition`),Ti(`${e}\t\t`,t.address)):1===t.type?(ui(`${e}\tStorage Deposit Return Unlock Condition`),Ti(`${e}\t\t`,t.returnAddress),ui(`${e}\t\tAmount:`,t.amount)):2===t.type?(ui(`${e}\tTimelock Unlock Condition`),ui(`${e}\t\tUnixTime:`,t.unixTime)):3===t.type?(ui(`${e}\tExpiration Unlock Condition`),Ti(`${e}\t\t`,t.returnAddress),ui(`${e}\t\tUnixTime:`,t.unixTime)):4===t.type?(ui(`${e}\tState Controller Address Unlock Condition`),Ti(`${e}\t\t`,t.address)):5===t.type?(ui(`${e}\tGovernor Address Unlock Condition`),Ti(`${e}\t\t`,t.address)):6===t.type&&(ui(`${e}\tImmutable Alias Unlock Condition`),Ti(`${e}\t\t`,t.address))}class Ci{static formatBest(e,t=2){return Ci.formatUnits(e,Ci.calculateBest(e),t)}static formatUnits(e,t,n=2){if(!Ci.MAGNITUDE_MAP[t])throw new Error(`Unrecognized magnitude ${t}`);return e?""===t?`${e}`:`${Ci.convertUnits(e,"",t).toFixed(n)} ${t}`:"0"}static calculateBest(e){let t="";if(!e)return t;const n=Math.abs(e).toString().length;return n>Ci.MAGNITUDE_MAP.P.dp?t="P":n>Ci.MAGNITUDE_MAP.T.dp?t="T":n>Ci.MAGNITUDE_MAP.G.dp?t="G":n>Ci.MAGNITUDE_MAP.M.dp?t="M":n>Ci.MAGNITUDE_MAP.K.dp&&(t="K"),t}static convertUnits(e,t,n){if(!e)return 0;if(!Ci.MAGNITUDE_MAP[t])throw new Error(`Unrecognized fromUnit ${t}`);if(!Ci.MAGNITUDE_MAP[n])throw new Error(`Unrecognized toUnit ${n}`);if(t===n)return Number(e);const i=e<0?-1:1,o=Math.abs(Number(e))*Ci.MAGNITUDE_MAP[t].val/Ci.MAGNITUDE_MAP[n].val,r=Ci.MAGNITUDE_MAP[n].dp;let a=o.toString();a.includes("e")&&(a=o.toFixed(Number.parseInt(a.split("-")[1],10)));const s=a.split(".");return 1===s.length&&s.push("0"),s[1]=s[1].slice(0,r),Number.parseFloat(`${s[0]}.${s[1]}`)*i}}Ci.MAGNITUDE_MAP={"":{val:1,dp:0},K:{val:1e3,dp:3},M:{val:1e6,dp:6},G:{val:1e9,dp:9},T:{val:1e12,dp:12},P:{val:1e15,dp:15}},e.ADDRESS_UNLOCK_CONDITION_TYPE=0,e.ALIAS_ADDRESS_TYPE=8,e.ALIAS_ID_LENGTH=c,e.ALIAS_OUTPUT_TYPE=4,e.ALIAS_UNLOCK_TYPE=2,e.ARRAY_LENGTH=2,e.BASIC_OUTPUT_TYPE=3,e.BLOCK_ID_LENGTH=u,e.Bech32Helper=Xn,e.COIN_TYPE_IOTA=qn,e.COIN_TYPE_SHIMMER=4219,e.CONFLICT_REASON_STRINGS=ai,e.ClientError=tn,e.DEFAULT_PROTOCOL_VERSION=2,e.ED25519_ADDRESS_TYPE=0,e.ED25519_SEED_TYPE=1,e.ED25519_SIGNATURE_TYPE=0,e.EXPIRATION_UNLOCK_CONDITION_TYPE=3,e.Ed25519Address=a,e.Ed25519Seed=si,e.FOUNDRY_OUTPUT_TYPE=5,e.GOVERNOR_ADDRESS_UNLOCK_CONDITION_TYPE=5,e.IMMUTABLE_ALIAS_UNLOCK_CONDITION_TYPE=6,e.INPUTS_COMMITMENT_SIZE=$e,e.ISSUER_FEATURE_TYPE=1,e.IndexerPluginClient=Gn,e.MAX_BLOCK_LENGTH=Jt,e.MAX_FUNDS_COUNT=127,e.MAX_INPUT_COUNT=J,e.MAX_METADATA_LENGTH=pn,e.MAX_NUMBER_PARENTS=Zt,e.MAX_OUTPUT_COUNT=It,e.MAX_PARENTS_COUNT=8,e.MAX_TAG_LENGTH=ke,e.MERKLE_PROOF_LENGTH=l,e.METADATA_FEATURE_TYPE=2,e.MILESTONE_PAYLOAD_TYPE=7,e.MIN_ADDRESS_LENGTH=w,e.MIN_ADDRESS_UNLOCK_CONDITION_LENGTH=Se,e.MIN_ALIAS_ADDRESS_LENGTH=33,e.MIN_ALIAS_OUTPUT_LENGTH=55,e.MIN_ALIAS_UNLOCK_LENGTH=3,e.MIN_BASIC_OUTPUT_LENGTH=it,e.MIN_ED25519_ADDRESS_LENGTH=f,e.MIN_ED25519_SIGNATURE_LENGTH=ce,e.MIN_EXPIRATION_UNLOCK_CONDITION_LENGTH=be,e.MIN_FEATURES_LENGTH=1,e.MIN_FEATURE_LENGTH=b,e.MIN_FOUNDRY_OUTPUT_LENGTH=lt,e.MIN_GOVERNOR_ADDRESS_UNLOCK_CONDITION_LENGTH=Le,e.MIN_IMMUTABLE_ALIAS_UNLOCK_CONDITION_LENGTH=He,e.MIN_INPUT_COUNT=1,e.MIN_INPUT_LENGTH=W,e.MIN_ISSUER_FEATURE_LENGTH=E,e.MIN_METADATA_FEATURE_LENGTH=3,e.MIN_MIGRATED_FUNDS_LENGTH=F,e.MIN_MILESTONE_OPTION_LENGTH=ae,e.MIN_MILESTONE_PAYLOAD_LENGTH=ge,e.MIN_NFT_ADDRESS_LENGTH=33,e.MIN_NFT_OUTPUT_LENGTH=ht,e.MIN_NFT_UNLOCK_LENGTH=3,e.MIN_NUMBER_PARENTS=jt,e.MIN_OUTPUT_COUNT=1,e.MIN_OUTPUT_LENGTH=Tt,e.MIN_PARENTS_COUNT=1,e.MIN_PAYLOAD_LENGTH=Yt,e.MIN_PROTOCOL_PARAMS_MILESTONE_OPTION_LENGTH=8,e.MIN_RECEIPT_MILESTONE_OPTION_LENGTH=ie,e.MIN_REFERENCE_UNLOCK_LENGTH=3,e.MIN_SENDER_FEATURE_LENGTH=x,e.MIN_SIGNATURE_LENGTH=fe,e.MIN_SIGNATURE_UNLOCK_LENGTH=bt,e.MIN_SIMPLE_TOKEN_SCHEME_LENGTH=97,e.MIN_STATE_CONTROLLER_ADDRESS_UNLOCK_CONDITION_LENGTH=Ke,e.MIN_STORAGE_DEPOSIT_RETURN_UNLOCK_CONDITION_LENGTH=Ve,e.MIN_TAGGED_DATA_PAYLOAD_LENGTH=9,e.MIN_TAG_FEATURE_LENGTH=2,e.MIN_TIMELOCK_UNLOCK_CONDITION_LENGTH=5,e.MIN_TOKEN_SCHEME_LENGTH=97,e.MIN_TRANSACTION_ESSENCE_LENGTH=$t,e.MIN_TRANSACTION_PAYLOAD_LENGTH=8,e.MIN_TREASURY_INPUT_LENGTH=G,e.MIN_TREASURY_OUTPUT_LENGTH=9,e.MIN_TREASURY_TRANSACTION_PAYLOAD_LENGTH=Gt,e.MIN_UNLOCK_CONDITIONS_LENGTH=1,e.MIN_UNLOCK_CONDITION_LENGTH=Je,e.MIN_UNLOCK_LENGTH=Ht,e.MIN_UTXO_INPUT_LENGTH=Y,e.NFT_ADDRESS_TYPE=s,e.NFT_ID_LENGTH=g,e.NFT_OUTPUT_TYPE=6,e.NFT_UNLOCK_TYPE=3,e.PROTOCOL_PARAMETERS_MILESTONE_OPTION_TYPE=1,e.RECEIPT_MILESTONE_OPTION_TYPE=0,e.REFERENCE_UNLOCK_TYPE=1,e.SENDER_FEATURE_TYPE=0,e.SIGNATURE_UNLOCK_TYPE=0,e.SIMPLE_TOKEN_SCHEME_TYPE=0,e.SMALL_TYPE_LENGTH=1,e.STATE_CONTROLLER_ADDRESS_UNLOCK_CONDITION_TYPE=4,e.STORAGE_DEPOSIT_RETURN_UNLOCK_CONDITION_TYPE=1,e.STRING_LENGTH=2,e.SingleNodeClient=Dn,e.TAGGED_DATA_PAYLOAD_TYPE=5,e.TAG_FEATURE_TYPE=3,e.TAIL_HASH_LENGTH=49,e.TIMELOCK_UNLOCK_CONDITION_TYPE=2,e.TRANSACTION_ESSENCE_TYPE=1,e.TRANSACTION_ID_LENGTH=d,e.TRANSACTION_PAYLOAD_TYPE=6,e.TREASURY_INPUT_TYPE=1,e.TREASURY_OUTPUT_TYPE=2,e.TREASURY_TRANSACTION_PAYLOAD_TYPE=4,e.TYPE_LENGTH=4,e.TransactionHelper=nn,e.UINT16_SIZE=2,e.UINT256_SIZE=32,e.UINT32_SIZE=4,e.UINT64_SIZE=8,e.UINT8_SIZE=1,e.UTXO_INPUT_TYPE=0,e.UnitsHelper=Ci,e.addressBalance=Kn,e.blockIdFromMilestonePayload=function(e,i){const o=new n.WriteStream;en(o,{protocolVersion:e,parents:i.parents,payload:i,nonce:"0"});const r=o.finalBytes(),a=t.Blake2b.sum256(r);return n.Converter.bytesToHex(a,!0)},e.buildTransactionPayload=ei,e.calculateInputs=oi,e.deserializeAddress=k,e.deserializeAddressUnlockCondition=Ce,e.deserializeAliasAddress=p,e.deserializeAliasOutput=tt,e.deserializeAliasUnlock=Nt,e.deserializeBasicOutput=ot,e.deserializeBlock=Qt,e.deserializeEd25519Address=m,e.deserializeEd25519Signature=pe,e.deserializeExpirationUnlockCondition=Me,e.deserializeFeature=H,e.deserializeFeatures=M,e.deserializeFoundryOutput=ct,e.deserializeFunds=z,e.deserializeGovernorAddressUnlockCondition=De,e.deserializeImmutableAliasUnlockCondition=Re,e.deserializeInput=Q,e.deserializeInputs=Z,e.deserializeIssuerFeature=$,e.deserializeMetadataFeature=_,e.deserializeMigratedFunds=L,e.deserializeMilestoneOption=de,e.deserializeMilestoneOptions=se,e.deserializeMilestonePayload=Te,e.deserializeNftAddress=T,e.deserializeNftOutput=ft,e.deserializeNftUnlock=At,e.deserializeOutput=Ut,e.deserializeOutputs=wt,e.deserializePayload=Vt,e.deserializeProtocolParamsMilestoneOption=te,e.deserializeReceiptMilestoneOption=oe,e.deserializeReferenceUnlock=Ct,e.deserializeSenderFeature=A,e.deserializeSignature=me,e.deserializeSignatureUnlock=Mt,e.deserializeSimpleTokenScheme=at,e.deserializeStateControllerAddressUnlockCondition=qe,e.deserializeStorageDepositReturnUnlockCondition=Xe,e.deserializeTagFeature=C,e.deserializeTaggedDataPayload=Ue,e.deserializeTimelockUnlockCondition=ze,e.deserializeTokenScheme=ut,e.deserializeTransactionEssence=vt,e.deserializeTransactionPayload=Lt,e.deserializeTreasuryInput=K,e.deserializeTreasuryOutput=yt,e.deserializeTreasuryTransactionPayload=Kt,e.deserializeUTXOInput=V,e.deserializeUnlock=zt,e.deserializeUnlockCondition=Qe,e.deserializeUnlockConditions=Ze,e.deserializeUnlocks=Rt,e.generateBip44Address=Yn,e.generateBip44Path=function(e,n,i,o=4218){const r=new t.Bip32Path(Vn(o));return r.pushHardened(e),r.pushHardened(i?1:0),r.pushHardened(n),r},e.getBalance=async function(e,t,n,i){const o=await Wn(e,t,n,i);let a=r.default(0);for(const e of o)a=a.plus(e.balance);return a},e.getUnspentAddress=async function(e,t,n,i){const o=await Wn(e,t,n,{startIndex:null==i?void 0:i.startIndex,zeroCount:null==i?void 0:i.zeroCount,requiredCount:1});return o.length>0?o[0]:void 0},e.getUnspentAddresses=Wn,e.getUnspentAddressesWithAddressGenerator=Jn,e.logAddress=Ti,e.logBlock=function(e,t){if(ui(`${e}\tProtocol Version:`,t.protocolVersion),t.parents)for(let n=0;n<t.parents.length;n++)ui(`${e}\tParent ${n+1} Block Id:`,t.parents[n]);di(`${e}\t`,t.payload),void 0!==t.nonce&&ui(`${e}\tNonce:`,t.nonce)},e.logBlockMetadata=function(e,t){if(ui(`${e}\tBlock Id:`,t.blockId),t.parents)for(let n=0;n<t.parents.length;n++)ui(`${e}\tParent ${n+1} Block Id:`,t.parents[n]);void 0!==t.isSolid&&ui(`${e}\tIs Solid:`,t.isSolid),void 0!==t.milestoneIndex&&ui(`${e}\tMilestone Index:`,t.milestoneIndex),void 0!==t.referencedByMilestoneIndex&&ui(`${e}\tReferenced By Milestone Index:`,t.referencedByMilestoneIndex),ui(`${e}\tLedger Inclusion State:`,t.ledgerInclusionState),void 0!==t.conflictReason&&ui(`${e}\tConflict Reason:`,t.conflictReason),void 0!==t.shouldPromote&&ui(`${e}\tShould Promote:`,t.shouldPromote),void 0!==t.shouldReattach&&ui(`${e}\tShould Reattach:`,t.shouldReattach)},e.logFeature=xi,e.logFeatures=_i,e.logFunds=Ei,e.logImmutableFeatures=Ni,e.logInfo=function(e,t){ui(`${e}\tName:`,t.name),ui(`${e}\tVersion:`,t.version),ui(`${e}\tStatus`),ui(`${e}\t\tIs Healthy:`,t.status.isHealthy),ui(`${e}\t\tLatest Milestone Index:`,t.status.latestMilestone.index),ui(`${e}\t\tLatest Milestone Timestamp:`,t.status.latestMilestone.timestamp),ui(`${e}\t\tLatest Milestone Id:`,t.status.latestMilestone.milestoneId),ui(`${e}\t\tConfirmed Milestone Index:`,t.status.confirmedMilestone.index),ui(`${e}\t\tConfirmed Milestone Timestamp:`,t.status.confirmedMilestone.timestamp),ui(`${e}\t\tConfirmed Milestone Id:`,t.status.confirmedMilestone.milestoneId),ui(`${e}\t\tPruning Index:`,t.status.pruningIndex),ui(`${e}\tProtocol`),ui(`${e}\t\tNetwork Name:`,t.protocol.networkName),ui(`${e}\t\tBech32 HRP:`,t.protocol.bech32Hrp),ui(`${e}\t\tToken supply:`,t.protocol.tokenSupply),ui(`${e}\t\tProtocol version:`,t.protocol.version),ui(`${e}\t\tMin PoW Score:`,t.protocol.minPowScore),ui(`${e}\t\tRent`),ui(`${e}\t\t\tVByte Cost:`,t.protocol.rentStructure.vByteCost),ui(`${e}\t\t\tVByte Factor Data:`,t.protocol.rentStructure.vByteFactorData),ui(`${e}\t\t\tVByte Factor Key:`,t.protocol.rentStructure.vByteFactorKey),ui(`${e}\tBase token`),ui(`${e}\t\tName:`,t.baseToken.name),ui(`${e}\t\tTicker Symbol:`,t.baseToken.tickerSymbol),ui(`${e}\t\tUnit:`,t.baseToken.unit),t.baseToken.subunit&&ui(`${e}\t\tSub unit:`,t.baseToken.subunit),ui(`${e}\t\tDecimals:`,t.baseToken.decimals),ui(`${e}\t\tUse metric prefix:`,t.baseToken.useMetricPrefix),ui(`${e}\tMetrics`),ui(`${e}\t\tBlocks Per Second:`,t.metrics.blocksPerSecond),ui(`${e}\t\tReferenced Blocks Per Second:`,t.metrics.referencedBlocksPerSecond),ui(`${e}\t\tReferenced Rate:`,t.metrics.referencedRate),ui(`${e}\tFeatures:`,t.features)},e.logInput=wi,e.logMilestoneOption=fi,e.logMilestoneOptions=hi,e.logMilestonePayload=pi,e.logNativeTokens=$i,e.logOutput=ki,e.logPayload=di,e.logProtocolParamsMilestoneOption=yi,e.logReceiptMilestoneOption=mi,e.logRoutes=function(e,t){ui(`${e}\tRoutes:`,t.routes)},e.logSignature=Ii,e.logTaggedDataPayload=ci,e.logTips=function(e,t){if(t.tips)for(let n=0;n<t.tips.length;n++)ui(`${e}\tTip ${n+1} Block Id:`,t.tips[n])},e.logTokenScheme=vi,e.logTransactionPayload=li,e.logTreasuryTransactionPayload=gi,e.logUnlock=Ui,e.logUnlockCondition=Si,e.logUnlockConditions=Ai,e.milestoneIdFromMilestonePayload=function(e){const i=new n.WriteStream;we(i,e);const o=i.finalBytes(),r=t.Blake2b.sum256(o);return n.Converter.bytesToHex(r,!0)},e.promote=Zn,e.reattach=jn,e.retrieveData=async function(e,t){const i="string"==typeof e?new Dn(e):e,o=await i.block(t);if(null==o?void 0:o.payload){let e;if(6===o.payload.type?e=o.payload.essence.payload:5===o.payload.type&&(e=o.payload),e)return{tag:e.tag?n.Converter.hexToBytes(e.tag):void 0,data:e.data?n.Converter.hexToBytes(e.data):void 0}}},e.retry=async function(e,t){const n="string"==typeof e?new Dn(e):e,i=await n.blockMetadata(t);if(!i)throw new Error("The block does not exist.");if(i.shouldPromote)return Zn(e,t);if(i.shouldReattach)return jn(e,t);throw new Error("The block should not be promoted or reattached.")},e.send=async function(e,t,n,i,o,r,a){return ti(e,t,n,[{addressBech32:i,amount:o}],r,a)},e.sendAdvanced=Qn,e.sendData=async function(e,t,i){const o="string"==typeof e?new Dn(e):e;let r,a;if(t&&(r="string"==typeof t?n.Converter.utf8ToHex(t,!0):n.Converter.bytesToHex(t,!0),(r.length-2)/2>ke))throw new Error(`The tag length is ${r.length/2}, which exceeds the maximum size of 64`);i&&(a=n.HexHelper.addPrefix("string"==typeof i?n.Converter.utf8ToHex(i,!0):n.Converter.bytesToHex(i,!0)));const s={payload:r&&a?{type:5,tag:r,data:a}:void 0};return{block:s,blockId:await o.blockSubmit(s)}},e.sendEd25519=async function(e,t,n,i,o,r,a){return ni(e,t,n,[{addressEd25519:i,amount:o}],r,a)},e.sendMultiple=ti,e.sendMultipleEd25519=ni,e.sendWithAddressGenerator=ii,e.serializeAddress=U,e.serializeAddressUnlockCondition=Oe,e.serializeAliasAddress=h,e.serializeAliasOutput=nt,e.serializeAliasUnlock=xt,e.serializeBasicOutput=rt,e.serializeBlock=en,e.serializeEd25519Address=y,e.serializeEd25519Signature=he,e.serializeExpirationUnlockCondition=Pe,e.serializeFeature=R,e.serializeFeatures=P,e.serializeFoundryOutput=pt,e.serializeFunds=B,e.serializeGovernorAddressUnlockCondition=Ge,e.serializeImmutableAliasUnlockCondition=Fe,e.serializeInput=ee,e.serializeInputs=j,e.serializeIssuerFeature=v,e.serializeMetadataFeature=N,e.serializeMigratedFunds=D,e.serializeMilestoneEssence=we,e.serializeMilestoneOption=le,e.serializeMilestoneOptions=ue,e.serializeMilestonePayload=Ie,e.serializeNftAddress=I,e.serializeNftOutput=mt,e.serializeNftUnlock=St,e.serializeOutput=Et,e.serializeOutputs=kt,e.serializePayload=Xt,e.serializeProtocolParamsMilestoneOption=ne,e.serializeReceiptMilestoneOption=re,e.serializeReferenceUnlock=Ot,e.serializeSenderFeature=S,e.serializeSignature=ye,e.serializeSignatureUnlock=Pt,e.serializeSimpleTokenScheme=st,e.serializeStateControllerAddressUnlockCondition=Ye,e.serializeStorageDepositReturnUnlockCondition=We,e.serializeTagFeature=O,e.serializeTaggedDataPayload=Ee,e.serializeTimelockUnlockCondition=Be,e.serializeTokenScheme=dt,e.serializeTransactionEssence=_t,e.serializeTransactionPayload=Dt,e.serializeTreasuryInput=q,e.serializeTreasuryOutput=gt,e.serializeTreasuryTransactionPayload=qt,e.serializeUTXOInput=X,e.serializeUnlock=Bt,e.serializeUnlockCondition=et,e.serializeUnlockConditions=je,e.serializeUnlocks=Ft,e.setLogger=function(e){ui=e},e.validateAddress=cn,e.validateAliasOutput=vn,e.validateBasicOutput=_n,e.validateBlock=Bn,e.validateFeature=fn,e.validateFeatures=hn,e.validateFoundryOutput=xn,e.validateInput=dn,e.validateInputs=un,e.validateNativeToken=Tn,e.validateNativeTokens=gn,e.validateNftOutput=An,e.validateOutput=Cn,e.validateOutputs=Sn,e.validateParents=Ln,e.validatePayload=Rn,e.validateSimpleTokenScheme=Nn,e.validateTaggedDataPayload=zn,e.validateTransactionEssence=On,e.validateTransactionPayload=Fn,e.validateTxEssencePayload=bn,e.validateUnlockCondition=yn,e.validateUnlockConditions=mn,e.validateUnlocks=Mn,Object.defineProperty(e,"__esModule",{value:!0})}));